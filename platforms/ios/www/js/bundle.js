!function e(t,n,o){function i(s,a){if(!n[s]){if(!t[s]){var u="function"==typeof require&&require;if(!a&&u)return u(s,!0);if(r)return r(s,!0);var l=new Error("Cannot find module '"+s+"'");throw l.code="MODULE_NOT_FOUND",l}var c=n[s]={exports:{}};t[s][0].call(c.exports,function(e){var n=t[s][1][e];return i(n?n:e)},c,c.exports,e,t,n,o)}return n[s].exports}for(var r="function"==typeof require&&require,s=0;s<o.length;s++)i(o[s]);return i}({1:[function(e,t,n){!function(){"use strict";function e(t,n){function i(e,t){return function(){return e.apply(t,arguments)}}var r;if(n=n||{},this.trackingClick=!1,this.trackingClickStart=0,this.targetElement=null,this.touchStartX=0,this.touchStartY=0,this.lastTouchIdentifier=0,this.touchBoundary=n.touchBoundary||10,this.layer=t,this.tapDelay=n.tapDelay||200,this.tapTimeout=n.tapTimeout||700,!e.notNeeded(t)){for(var s=["onMouse","onClick","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel"],a=this,u=0,l=s.length;l>u;u++)a[s[u]]=i(a[s[u]],a);o&&(t.addEventListener("mouseover",this.onMouse,!0),t.addEventListener("mousedown",this.onMouse,!0),t.addEventListener("mouseup",this.onMouse,!0)),t.addEventListener("click",this.onClick,!0),t.addEventListener("touchstart",this.onTouchStart,!1),t.addEventListener("touchmove",this.onTouchMove,!1),t.addEventListener("touchend",this.onTouchEnd,!1),t.addEventListener("touchcancel",this.onTouchCancel,!1),Event.prototype.stopImmediatePropagation||(t.removeEventListener=function(e,n,o){var i=Node.prototype.removeEventListener;"click"===e?i.call(t,e,n.hijacked||n,o):i.call(t,e,n,o)},t.addEventListener=function(e,n,o){var i=Node.prototype.addEventListener;"click"===e?i.call(t,e,n.hijacked||(n.hijacked=function(e){e.propagationStopped||n(e)}),o):i.call(t,e,n,o)}),"function"==typeof t.onclick&&(r=t.onclick,t.addEventListener("click",function(e){r(e)},!1),t.onclick=null)}}var n=navigator.userAgent.indexOf("Windows Phone")>=0,o=navigator.userAgent.indexOf("Android")>0&&!n,i=/iP(ad|hone|od)/.test(navigator.userAgent)&&!n,r=i&&/OS 4_\d(_\d)?/.test(navigator.userAgent),s=i&&/OS [6-7]_\d/.test(navigator.userAgent),a=navigator.userAgent.indexOf("BB10")>0;e.prototype.needsClick=function(e){switch(e.nodeName.toLowerCase()){case"button":case"select":case"textarea":if(e.disabled)return!0;break;case"input":if(i&&"file"===e.type||e.disabled)return!0;break;case"label":case"iframe":case"video":return!0}return/\bneedsclick\b/.test(e.className)},e.prototype.needsFocus=function(e){switch(e.nodeName.toLowerCase()){case"textarea":return!0;case"select":return!o;case"input":switch(e.type){case"button":case"checkbox":case"file":case"image":case"radio":case"submit":return!1}return!e.disabled&&!e.readOnly;default:return/\bneedsfocus\b/.test(e.className)}},e.prototype.sendClick=function(e,t){var n,o;document.activeElement&&document.activeElement!==e&&document.activeElement.blur(),o=t.changedTouches[0],n=document.createEvent("MouseEvents"),n.initMouseEvent(this.determineEventType(e),!0,!0,window,1,o.screenX,o.screenY,o.clientX,o.clientY,!1,!1,!1,!1,0,null),n.forwardedTouchEvent=!0,e.dispatchEvent(n)},e.prototype.determineEventType=function(e){return o&&"select"===e.tagName.toLowerCase()?"mousedown":"click"},e.prototype.focus=function(e){var t;i&&e.setSelectionRange&&0!==e.type.indexOf("date")&&"time"!==e.type&&"month"!==e.type?(t=e.value.length,e.setSelectionRange(t,t)):e.focus()},e.prototype.updateScrollParent=function(e){var t,n;if(t=e.fastClickScrollParent,!t||!t.contains(e)){n=e;do{if(n.scrollHeight>n.offsetHeight){t=n,e.fastClickScrollParent=n;break}n=n.parentElement}while(n)}t&&(t.fastClickLastScrollTop=t.scrollTop)},e.prototype.getTargetElementFromEventTarget=function(e){return e.nodeType===Node.TEXT_NODE?e.parentNode:e},e.prototype.onTouchStart=function(e){var t,n,o;if(e.targetTouches.length>1)return!0;if(t=this.getTargetElementFromEventTarget(e.target),n=e.targetTouches[0],i){if(o=window.getSelection(),o.rangeCount&&!o.isCollapsed)return!0;if(!r){if(n.identifier&&n.identifier===this.lastTouchIdentifier)return e.preventDefault(),!1;this.lastTouchIdentifier=n.identifier,this.updateScrollParent(t)}}return this.trackingClick=!0,this.trackingClickStart=e.timeStamp,this.targetElement=t,this.touchStartX=n.pageX,this.touchStartY=n.pageY,e.timeStamp-this.lastClickTime<this.tapDelay&&e.preventDefault(),!0},e.prototype.touchHasMoved=function(e){var t=e.changedTouches[0],n=this.touchBoundary;return Math.abs(t.pageX-this.touchStartX)>n||Math.abs(t.pageY-this.touchStartY)>n},e.prototype.onTouchMove=function(e){return this.trackingClick?((this.targetElement!==this.getTargetElementFromEventTarget(e.target)||this.touchHasMoved(e))&&(this.trackingClick=!1,this.targetElement=null),!0):!0},e.prototype.findControl=function(e){return void 0!==e.control?e.control:e.htmlFor?document.getElementById(e.htmlFor):e.querySelector("button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea")},e.prototype.onTouchEnd=function(e){var t,n,a,u,l,c=this.targetElement;if(!this.trackingClick)return!0;if(e.timeStamp-this.lastClickTime<this.tapDelay)return this.cancelNextClick=!0,!0;if(e.timeStamp-this.trackingClickStart>this.tapTimeout)return!0;if(this.cancelNextClick=!1,this.lastClickTime=e.timeStamp,n=this.trackingClickStart,this.trackingClick=!1,this.trackingClickStart=0,s&&(l=e.changedTouches[0],c=document.elementFromPoint(l.pageX-window.pageXOffset,l.pageY-window.pageYOffset)||c,c.fastClickScrollParent=this.targetElement.fastClickScrollParent),a=c.tagName.toLowerCase(),"label"===a){if(t=this.findControl(c)){if(this.focus(c),o)return!1;c=t}}else if(this.needsFocus(c))return e.timeStamp-n>100||i&&window.top!==window&&"input"===a?(this.targetElement=null,!1):(this.focus(c),this.sendClick(c,e),i&&"select"===a||(this.targetElement=null,e.preventDefault()),!1);return i&&!r&&(u=c.fastClickScrollParent,u&&u.fastClickLastScrollTop!==u.scrollTop)?!0:(this.needsClick(c)||(e.preventDefault(),this.sendClick(c,e)),!1)},e.prototype.onTouchCancel=function(){this.trackingClick=!1,this.targetElement=null},e.prototype.onMouse=function(e){return this.targetElement?e.forwardedTouchEvent?!0:e.cancelable&&(!this.needsClick(this.targetElement)||this.cancelNextClick)?(e.stopImmediatePropagation?e.stopImmediatePropagation():e.propagationStopped=!0,e.stopPropagation(),e.preventDefault(),!1):!0:!0},e.prototype.onClick=function(e){var t;return this.trackingClick?(this.targetElement=null,this.trackingClick=!1,!0):"submit"===e.target.type&&0===e.detail?!0:(t=this.onMouse(e),t||(this.targetElement=null),t)},e.prototype.destroy=function(){var e=this.layer;o&&(e.removeEventListener("mouseover",this.onMouse,!0),e.removeEventListener("mousedown",this.onMouse,!0),e.removeEventListener("mouseup",this.onMouse,!0)),e.removeEventListener("click",this.onClick,!0),e.removeEventListener("touchstart",this.onTouchStart,!1),e.removeEventListener("touchmove",this.onTouchMove,!1),e.removeEventListener("touchend",this.onTouchEnd,!1),e.removeEventListener("touchcancel",this.onTouchCancel,!1)},e.notNeeded=function(e){var t,n,i,r;if("undefined"==typeof window.ontouchstart)return!0;if(n=+(/Chrome\/([0-9]+)/.exec(navigator.userAgent)||[,0])[1]){if(!o)return!0;if(t=document.querySelector("meta[name=viewport]")){if(-1!==t.content.indexOf("user-scalable=no"))return!0;if(n>31&&document.documentElement.scrollWidth<=window.outerWidth)return!0}}if(a&&(i=navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/),i[1]>=10&&i[2]>=3&&(t=document.querySelector("meta[name=viewport]")))){if(-1!==t.content.indexOf("user-scalable=no"))return!0;if(document.documentElement.scrollWidth<=window.outerWidth)return!0}return"none"===e.style.msTouchAction||"manipulation"===e.style.touchAction?!0:(r=+(/Firefox\/([0-9]+)/.exec(navigator.userAgent)||[,0])[1],r>=27&&(t=document.querySelector("meta[name=viewport]"),t&&(-1!==t.content.indexOf("user-scalable=no")||document.documentElement.scrollWidth<=window.outerWidth))?!0:"none"===e.style.touchAction||"manipulation"===e.style.touchAction)},e.attach=function(t,n){return new e(t,n)},"function"==typeof define&&"object"==typeof define.amd&&define.amd?define(function(){return e}):"undefined"!=typeof t&&t.exports?(t.exports=e.attach,t.exports.FastClick=e):window.FastClick=e}()},{}],2:[function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{"default":e}}var i=e("./../libs/jquery/jquery"),r=(o(i),e("./../libs/evothings/evothings")),s=(o(r),e("./../libs/sortable/Sortable")),a=(o(s),e("fastclick"));(0,a.attachFastClick)(document.body)},{"./../libs/evothings/evothings":3,"./../libs/jquery/jquery":4,"./../libs/sortable/Sortable":5,fastclick:1}],3:[function(e,t,n){"use strict";var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},i="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":o(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":o(e)},r="function"==typeof Symbol&&"symbol"===i(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":i(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":i(e)},s="function"==typeof Symbol&&"symbol"===r(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":r(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":r(e)},a="function"==typeof Symbol&&"symbol"===s(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":s(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":s(e)},u="function"==typeof Symbol&&"symbol"===a(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":a(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":a(e)},l="function"==typeof Symbol&&"symbol"===u(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":u(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":u(e)},c="function"==typeof Symbol&&"symbol"===l(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":l(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":l(e)},f="function"==typeof Symbol&&"symbol"===c(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":c(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":c(e)},d="function"==typeof Symbol&&"symbol"===f(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":f(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":f(e)},p="function"==typeof Symbol&&"symbol"===d(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":d(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":d(e)},h="function"==typeof Symbol&&"symbol"===p(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":p(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":p(e)},y="function"==typeof Symbol&&"symbol"===h(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":h(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":h(e)},m="function"==typeof Symbol&&"symbol"===y(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":y(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":y(e)},g="function"==typeof Symbol&&"symbol"===m(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":m(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":m(e)};evothings=window.evothings||{},function(){var e=0,t={},n=[];return evothings.loadScript=function(o,i){if(t[o])return void(i&&i());t[o]="loadingstarted",++e;var r=document.createElement("script");r.type="text/javascript",r.src=o,r.onload=function(){if(t[o]="loadingcomplete",--e,i&&i(),0==e){for(var r=0;r<n.length;++r)n[r]();n=[]}},r.onerror=function(){throw"Could not load script '"+o+"'"},document.head.appendChild(r)},evothings.scriptsLoaded=function(o){0!=Object.keys(t).length&&0==e?o():n.push(o)},evothings.printObject=function(e,t){function n(e,o){var i=new Array(o+1).join("  ");for(var r in e)if(e.hasOwnProperty(r)){var s=e[r];"object"==("undefined"==typeof s?"undefined":g(s))?(t(i+r+":"),n(s,o+1)):t(i+r+": "+s)}}t=t||console.log,n(e,0)},evothings.os={},evothings.os.isIOS=function(){return/iP(hone|ad|od)/.test(navigator.userAgent)},evothings.os.isIOS7=function(){return/iP(hone|ad|od).*OS 7/.test(navigator.userAgent)},evothings.os.isAndroid=function(){return/Android|android/.test(navigator.userAgent)},evothings.os.isWP=function(){return/Windows Phone/.test(navigator.userAgent)},evothings}(),window.addEventListener("DOMContentLoaded",function(e){evothings.os.isIOS7()&&(document.body.style.fontSize="20pt")})},{}],4:[function(e,t,n){"use strict";var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},i="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":o(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":o(e)},r="function"==typeof Symbol&&"symbol"===i(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":i(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":i(e)},s="function"==typeof Symbol&&"symbol"===r(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":r(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":r(e)},a="function"==typeof Symbol&&"symbol"===s(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":s(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":s(e)},u="function"==typeof Symbol&&"symbol"===a(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":a(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":a(e)};!function(e,n){"object"==("undefined"==typeof t?"undefined":u(t))&&"object"==u(t.exports)?t.exports=e.document?n(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return n(e)}:n(e)}("undefined"!=typeof window?window:void 0,function(e,t){function n(e){var t=e.length,n=ee.type(e);return"function"===n||ee.isWindow(e)?!1:1===e.nodeType&&t?!0:"array"===n||0===t||"number"==typeof t&&t>0&&t-1 in e}function o(e,t,n){if(ee.isFunction(t))return ee.grep(e,function(e,o){return!!t.call(e,o,e)!==n});if(t.nodeType)return ee.grep(e,function(e){return e===t!==n});if("string"==typeof t){if(ue.test(t))return ee.filter(t,e,n);t=ee.filter(t,e)}return ee.grep(e,function(e){return U.call(t,e)>=0!==n})}function i(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}function r(e){var t=ye[e]={};return ee.each(e.match(he)||[],function(e,n){t[n]=!0}),t}function s(){K.removeEventListener("DOMContentLoaded",s,!1),e.removeEventListener("load",s,!1),ee.ready()}function a(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=ee.expando+Math.random()}function l(e,t,n){var o;if(void 0===n&&1===e.nodeType)if(o="data-"+t.replace(Se,"-$1").toLowerCase(),n=e.getAttribute(o),"string"==typeof n){try{n="true"===n?!0:"false"===n?!1:"null"===n?null:+n+""===n?+n:xe.test(n)?ee.parseJSON(n):n}catch(i){}be.set(e,t,n)}else n=void 0;return n}function c(){return!0}function f(){return!1}function d(){try{return K.activeElement}catch(e){}}function p(e,t){return ee.nodeName(e,"table")&&ee.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function h(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function y(e){var t=Fe.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function m(e,t){for(var n=0,o=e.length;o>n;n++)ve.set(e[n],"globalEval",!t||ve.get(t[n],"globalEval"))}function g(e,t){var n,o,i,r,s,a,u,l;if(1===t.nodeType){if(ve.hasData(e)&&(r=ve.access(e),s=ve.set(t,r),l=r.events)){delete s.handle,s.events={};for(i in l)for(n=0,o=l[i].length;o>n;n++)ee.event.add(t,i,l[i][n])}be.hasData(e)&&(a=be.access(e),u=ee.extend({},a),be.set(t,u))}}function v(e,t){var n=e.getElementsByTagName?e.getElementsByTagName(t||"*"):e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&ee.nodeName(e,t)?ee.merge([e],n):n}function b(e,t){var n=t.nodeName.toLowerCase();"input"===n&&Ee.test(e.type)?t.checked=e.checked:("input"===n||"textarea"===n)&&(t.defaultValue=e.defaultValue)}function x(t,n){var o,i=ee(n.createElement(t)).appendTo(n.body),r=e.getDefaultComputedStyle&&(o=e.getDefaultComputedStyle(i[0]))?o.display:ee.css(i[0],"display");return i.detach(),r}function S(e){var t=K,n=We[e];return n||(n=x(e,t),"none"!==n&&n||(Be=(Be||ee("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement),t=Be[0].contentDocument,t.write(),t.close(),n=x(e,t),Be.detach()),We[e]=n),n}function w(e,t,n){var o,i,r,s,a=e.style;return n=n||$e(e),n&&(s=n.getPropertyValue(t)||n[t]),n&&(""!==s||ee.contains(e.ownerDocument,e)||(s=ee.style(e,t)),Xe.test(s)&&Ie.test(t)&&(o=a.width,i=a.minWidth,r=a.maxWidth,a.minWidth=a.maxWidth=a.width=s,s=n.width,a.width=o,a.minWidth=i,a.maxWidth=r)),void 0!==s?s+"":s}function T(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}function C(e,t){if(t in e)return t;for(var n=t[0].toUpperCase()+t.slice(1),o=t,i=Qe.length;i--;)if(t=Qe[i]+n,t in e)return t;return o}function E(e,t,n){var o=ze.exec(t);return o?Math.max(0,o[1]-(n||0))+(o[2]||"px"):t}function k(e,t,n,o,i){for(var r=n===(o?"border":"content")?4:"width"===t?1:0,s=0;4>r;r+=2)"margin"===n&&(s+=ee.css(e,n+Te[r],!0,i)),o?("content"===n&&(s-=ee.css(e,"padding"+Te[r],!0,i)),"margin"!==n&&(s-=ee.css(e,"border"+Te[r]+"Width",!0,i))):(s+=ee.css(e,"padding"+Te[r],!0,i),"padding"!==n&&(s+=ee.css(e,"border"+Te[r]+"Width",!0,i)));return s}function D(e,t,n){var o=!0,i="width"===t?e.offsetWidth:e.offsetHeight,r=$e(e),s="border-box"===ee.css(e,"boxSizing",!1,r);if(0>=i||null==i){if(i=w(e,t,r),(0>i||null==i)&&(i=e.style[t]),Xe.test(i))return i;o=s&&(J.boxSizingReliable()||i===e.style[t]),i=parseFloat(i)||0}return i+k(e,t,n||(s?"border":"content"),o,r)+"px"}function N(e,t){for(var n,o,i,r=[],s=0,a=e.length;a>s;s++)o=e[s],o.style&&(r[s]=ve.get(o,"olddisplay"),n=o.style.display,t?(r[s]||"none"!==n||(o.style.display=""),""===o.style.display&&Ce(o)&&(r[s]=ve.access(o,"olddisplay",S(o.nodeName)))):(i=Ce(o),"none"===n&&i||ve.set(o,"olddisplay",i?n:ee.css(o,"display"))));for(s=0;a>s;s++)o=e[s],o.style&&(t&&"none"!==o.style.display&&""!==o.style.display||(o.style.display=t?r[s]||"":"none"));return e}function A(e,t,n,o,i){return new A.prototype.init(e,t,n,o,i)}function j(){return setTimeout(function(){Je=void 0}),Je=ee.now()}function L(e,t){var n,o=0,i={height:e};for(t=t?1:0;4>o;o+=2-t)n=Te[o],i["margin"+n]=i["padding"+n]=e;return t&&(i.opacity=i.width=e),i}function O(e,t,n){for(var o,i=(ot[t]||[]).concat(ot["*"]),r=0,s=i.length;s>r;r++)if(o=i[r].call(n,t,e))return o}function _(e,t,n){var o,i,r,s,a,u,l,c,f=this,d={},p=e.style,h=e.nodeType&&Ce(e),y=ve.get(e,"fxshow");n.queue||(a=ee._queueHooks(e,"fx"),null==a.unqueued&&(a.unqueued=0,u=a.empty.fire,a.empty.fire=function(){a.unqueued||u()}),a.unqueued++,f.always(function(){f.always(function(){a.unqueued--,ee.queue(e,"fx").length||a.empty.fire()})})),1===e.nodeType&&("height"in t||"width"in t)&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],l=ee.css(e,"display"),c="none"===l?ve.get(e,"olddisplay")||S(e.nodeName):l,"inline"===c&&"none"===ee.css(e,"float")&&(p.display="inline-block")),n.overflow&&(p.overflow="hidden",f.always(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]}));for(o in t)if(i=t[o],Ze.exec(i)){if(delete t[o],r=r||"toggle"===i,i===(h?"hide":"show")){if("show"!==i||!y||void 0===y[o])continue;h=!0}d[o]=y&&y[o]||ee.style(e,o)}else l=void 0;if(ee.isEmptyObject(d))"inline"===("none"===l?S(e.nodeName):l)&&(p.display=l);else{y?"hidden"in y&&(h=y.hidden):y=ve.access(e,"fxshow",{}),r&&(y.hidden=!h),h?ee(e).show():f.done(function(){ee(e).hide()}),f.done(function(){var t;ve.remove(e,"fxshow");for(t in d)ee.style(e,t,d[t])});for(o in d)s=O(h?y[o]:0,o,f),o in y||(y[o]=s.start,h&&(s.end=s.start,s.start="width"===o||"height"===o?1:0))}}function q(e,t){var n,o,i,r,s;for(n in e)if(o=ee.camelCase(n),i=t[o],r=e[n],ee.isArray(r)&&(i=r[1],r=e[n]=r[0]),n!==o&&(e[o]=r,delete e[n]),s=ee.cssHooks[o],s&&"expand"in s){r=s.expand(r),delete e[o];for(n in r)n in e||(e[n]=r[n],t[n]=i)}else t[o]=i}function H(e,t,n){var o,i,r=0,s=nt.length,a=ee.Deferred().always(function(){delete u.elem}),u=function f(){if(i)return!1;for(var t=Je||j(),n=Math.max(0,l.startTime+l.duration-t),o=n/l.duration||0,r=1-o,s=0,f=l.tweens.length;f>s;s++)l.tweens[s].run(r);return a.notifyWith(e,[l,r,n]),1>r&&f?n:(a.resolveWith(e,[l]),!1)},l=a.promise({elem:e,props:ee.extend({},t),opts:ee.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:Je||j(),duration:n.duration,tweens:[],createTween:function(t,n){var o=ee.Tween(e,l.opts,t,n,l.opts.specialEasing[t]||l.opts.easing);return l.tweens.push(o),o},stop:function(t){var n=0,o=t?l.tweens.length:0;if(i)return this;for(i=!0;o>n;n++)l.tweens[n].run(1);return t?a.resolveWith(e,[l,t]):a.rejectWith(e,[l,t]),this}}),c=l.props;for(q(c,l.opts.specialEasing);s>r;r++)if(o=nt[r].call(l,e,c,l.opts))return o;return ee.map(c,O,l),ee.isFunction(l.opts.start)&&l.opts.start.call(e,l),ee.fx.timer(ee.extend(u,{elem:e,anim:l,queue:l.opts.queue})),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always)}function M(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var o,i=0,r=t.toLowerCase().match(he)||[];if(ee.isFunction(n))for(;o=r[i++];)"+"===o[0]?(o=o.slice(1)||"*",(e[o]=e[o]||[]).unshift(n)):(e[o]=e[o]||[]).push(n)}}function F(e,t,n,o){function i(a){var u;return r[a]=!0,ee.each(e[a]||[],function(e,a){var l=a(t,n,o);return"string"!=typeof l||s||r[l]?s?!(u=l):void 0:(t.dataTypes.unshift(l),i(l),!1)}),u}var r={},s=e===wt;return i(t.dataTypes[0])||!r["*"]&&i("*")}function P(e,t){var n,o,i=ee.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:o||(o={}))[n]=t[n]);return o&&ee.extend(!0,e,o),e}function R(e,t,n){for(var o,i,r,s,a=e.contents,u=e.dataTypes;"*"===u[0];)u.shift(),void 0===o&&(o=e.mimeType||t.getResponseHeader("Content-Type"));if(o)for(i in a)if(a[i]&&a[i].test(o)){u.unshift(i);break}if(u[0]in n)r=u[0];else{for(i in n){if(!u[0]||e.converters[i+" "+u[0]]){r=i;break}s||(s=i)}r=r||s}return r?(r!==u[0]&&u.unshift(r),n[r]):void 0}function B(e,t,n,o){var i,r,s,a,u,l={},c=e.dataTypes.slice();if(c[1])for(s in e.converters)l[s.toLowerCase()]=e.converters[s];for(r=c.shift();r;)if(e.responseFields[r]&&(n[e.responseFields[r]]=t),!u&&o&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=r,r=c.shift())if("*"===r)r=u;else if("*"!==u&&u!==r){if(s=l[u+" "+r]||l["* "+r],!s)for(i in l)if(a=i.split(" "),a[1]===r&&(s=l[u+" "+a[0]]||l["* "+a[0]])){s===!0?s=l[i]:l[i]!==!0&&(r=a[0],c.unshift(a[1]));break}if(s!==!0)if(s&&e["throws"])t=s(t);else try{t=s(t)}catch(f){return{state:"parsererror",error:s?f:"No conversion from "+u+" to "+r}}}return{state:"success",data:t}}function W(e,t,n,o){var i;if(ee.isArray(t))ee.each(t,function(t,i){n||kt.test(e)?o(e,i):W(e+"["+("object"==("undefined"==typeof i?"undefined":u(i))?t:"")+"]",i,n,o)});else if(n||"object"!==ee.type(t))o(e,t);else for(i in t)W(e+"["+i+"]",t[i],n,o)}function I(e){return ee.isWindow(e)?e:9===e.nodeType&&e.defaultView}var X=[],$=X.slice,Y=X.concat,z=X.push,U=X.indexOf,V={},G=V.toString,Q=V.hasOwnProperty,J={},K=e.document,Z="2.1.1",ee=function Bt(e,t){return new Bt.fn.init(e,t)},te=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,ne=/^-ms-/,oe=/-([\da-z])/gi,ie=function(e,t){return t.toUpperCase()};ee.fn=ee.prototype={jquery:Z,constructor:ee,selector:"",length:0,toArray:function(){return $.call(this)},get:function(e){return null!=e?0>e?this[e+this.length]:this[e]:$.call(this)},pushStack:function(e){var t=ee.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return ee.each(this,e,t)},map:function(e){return this.pushStack(ee.map(this,function(t,n){return e.call(t,n,t)}))},slice:function(){return this.pushStack($.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:z,sort:X.sort,splice:X.splice},ee.extend=ee.fn.extend=function(){var e,t,n,o,i,r,s=arguments[0]||{},a=1,l=arguments.length,c=!1;for("boolean"==typeof s&&(c=s,s=arguments[a]||{},a++),"object"==("undefined"==typeof s?"undefined":u(s))||ee.isFunction(s)||(s={}),a===l&&(s=this,a--);l>a;a++)if(null!=(e=arguments[a]))for(t in e)n=s[t],o=e[t],s!==o&&(c&&o&&(ee.isPlainObject(o)||(i=ee.isArray(o)))?(i?(i=!1,r=n&&ee.isArray(n)?n:[]):r=n&&ee.isPlainObject(n)?n:{},s[t]=ee.extend(c,r,o)):void 0!==o&&(s[t]=o));return s},ee.extend({expando:"jQuery"+(Z+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===ee.type(e)},isArray:Array.isArray,isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){return!ee.isArray(e)&&e-parseFloat(e)>=0},isPlainObject:function(e){return"object"!==ee.type(e)||e.nodeType||ee.isWindow(e)?!1:!e.constructor||Q.call(e.constructor.prototype,"isPrototypeOf")},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},type:function(e){return null==e?e+"":"object"==("undefined"==typeof e?"undefined":u(e))||"function"==typeof e?V[G.call(e)]||"object":"undefined"==typeof e?"undefined":u(e)},globalEval:function(e){var t,n=eval;e=ee.trim(e),e&&(1===e.indexOf("use strict")?(t=K.createElement("script"),t.text=e,K.head.appendChild(t).parentNode.removeChild(t)):n(e))},camelCase:function(e){return e.replace(ne,"ms-").replace(oe,ie)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,o){var i,r=0,s=e.length,a=n(e);if(o){if(a)for(;s>r&&(i=t.apply(e[r],o),i!==!1);r++);else for(r in e)if(i=t.apply(e[r],o),i===!1)break}else if(a)for(;s>r&&(i=t.call(e[r],r,e[r]),i!==!1);r++);else for(r in e)if(i=t.call(e[r],r,e[r]),i===!1)break;return e},trim:function(e){return null==e?"":(e+"").replace(te,"")},makeArray:function(e,t){var o=t||[];return null!=e&&(n(Object(e))?ee.merge(o,"string"==typeof e?[e]:e):z.call(o,e)),o},inArray:function(e,t,n){return null==t?-1:U.call(t,e,n)},merge:function(e,t){for(var n=+t.length,o=0,i=e.length;n>o;o++)e[i++]=t[o];return e.length=i,e},grep:function(e,t,n){for(var o,i=[],r=0,s=e.length,a=!n;s>r;r++)o=!t(e[r],r),o!==a&&i.push(e[r]);return i},map:function(e,t,o){var i,r=0,s=e.length,a=n(e),u=[];if(a)for(;s>r;r++)i=t(e[r],r,o),null!=i&&u.push(i);else for(r in e)i=t(e[r],r,o),null!=i&&u.push(i);return Y.apply([],u)},guid:1,proxy:function(e,t){var n,o,i;return"string"==typeof t&&(n=e[t],t=e,e=n),ee.isFunction(e)?(o=$.call(arguments,2),i=function(){return e.apply(t||this,o.concat($.call(arguments)))},i.guid=e.guid=e.guid||ee.guid++,i):void 0},now:Date.now,support:J}),ee.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(e,t){V["[object "+t+"]"]=t.toLowerCase()});var re=function(e){function t(e,t,n,o){var i,r,s,a,u,l,c,d,h,y;if((t?t.ownerDocument||t:W)!==_&&O(t),t=t||_,n=n||[],!e||"string"!=typeof e)return n;if(1!==(a=t.nodeType)&&9!==a)return[];if(H&&!o){if(i=be.exec(e))if(s=i[1]){if(9===a){if(r=t.getElementById(s),!r||!r.parentNode)return n;if(r.id===s)return n.push(r),n}else if(t.ownerDocument&&(r=t.ownerDocument.getElementById(s))&&R(t,r)&&r.id===s)return n.push(r),n}else{if(i[2])return ee.apply(n,t.getElementsByTagName(e)),n;if((s=i[3])&&w.getElementsByClassName&&t.getElementsByClassName)return ee.apply(n,t.getElementsByClassName(s)),n}if(w.qsa&&(!M||!M.test(e))){if(d=c=B,h=t,y=9===a&&e,1===a&&"object"!==t.nodeName.toLowerCase()){for(l=k(e),(c=t.getAttribute("id"))?d=c.replace(Se,"\\$&"):t.setAttribute("id",d),d="[id='"+d+"'] ",u=l.length;u--;)l[u]=d+p(l[u]);h=xe.test(e)&&f(t.parentNode)||t,y=l.join(",")}if(y)try{return ee.apply(n,h.querySelectorAll(y)),n}catch(m){}finally{c||t.removeAttribute("id")}}}return N(e.replace(le,"$1"),t,n,o)}function n(){function e(n,o){return t.push(n+" ")>T.cacheLength&&delete e[t.shift()],e[n+" "]=o}var t=[];return e}function o(e){return e[B]=!0,e}function i(e){var t=_.createElement("div");try{return!!e(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function r(e,t){for(var n=e.split("|"),o=e.length;o--;)T.attrHandle[n[o]]=t}function s(e,t){var n=t&&e,o=n&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||G)-(~e.sourceIndex||G);if(o)return o;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function a(e){return function(t){var n=t.nodeName.toLowerCase();return"input"===n&&t.type===e}}function l(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function c(e){return o(function(t){return t=+t,o(function(n,o){for(var i,r=e([],n.length,t),s=r.length;s--;)n[i=r[s]]&&(n[i]=!(o[i]=n[i]))})})}function f(e){return e&&u(e.getElementsByTagName)!==V&&e}function d(){}function p(e){for(var t=0,n=e.length,o="";n>t;t++)o+=e[t].value;return o}function h(e,t,n){var o=t.dir,i=n&&"parentNode"===o,r=X++;return t.first?function(t,n,r){for(;t=t[o];)if(1===t.nodeType||i)return e(t,n,r)}:function(t,n,s){var a,u,l=[I,r];if(s){for(;t=t[o];)if((1===t.nodeType||i)&&e(t,n,s))return!0}else for(;t=t[o];)if(1===t.nodeType||i){if(u=t[B]||(t[B]={}),(a=u[o])&&a[0]===I&&a[1]===r)return l[2]=a[2];if(u[o]=l,l[2]=e(t,n,s))return!0}}}function y(e){return e.length>1?function(t,n,o){for(var i=e.length;i--;)if(!e[i](t,n,o))return!1;return!0}:e[0]}function m(e,n,o){for(var i=0,r=n.length;r>i;i++)t(e,n[i],o);return o}function g(e,t,n,o,i){for(var r,s=[],a=0,u=e.length,l=null!=t;u>a;a++)(r=e[a])&&(!n||n(r,o,i))&&(s.push(r),l&&t.push(a));return s}function v(e,t,n,i,r,s){return i&&!i[B]&&(i=v(i)),r&&!r[B]&&(r=v(r,s)),o(function(o,s,a,u){var l,c,f,d=[],p=[],h=s.length,y=o||m(t||"*",a.nodeType?[a]:a,[]),v=!e||!o&&t?y:g(y,d,e,a,u),b=n?r||(o?e:h||i)?[]:s:v;if(n&&n(v,b,a,u),i)for(l=g(b,p),i(l,[],a,u),c=l.length;c--;)(f=l[c])&&(b[p[c]]=!(v[p[c]]=f));if(o){if(r||e){if(r){for(l=[],c=b.length;c--;)(f=b[c])&&l.push(v[c]=f);r(null,b=[],l,u)}for(c=b.length;c--;)(f=b[c])&&(l=r?ne.call(o,f):d[c])>-1&&(o[l]=!(s[l]=f))}}else b=g(b===s?b.splice(h,b.length):b),r?r(null,s,b,u):ee.apply(s,b)})}function b(e){for(var t,n,o,i=e.length,r=T.relative[e[0].type],s=r||T.relative[" "],a=r?1:0,u=h(function(e){return e===t},s,!0),l=h(function(e){return ne.call(t,e)>-1},s,!0),c=[function(e,n,o){return!r&&(o||n!==A)||((t=n).nodeType?u(e,n,o):l(e,n,o))}];i>a;a++)if(n=T.relative[e[a].type])c=[h(y(c),n)];else{if(n=T.filter[e[a].type].apply(null,e[a].matches),n[B]){for(o=++a;i>o&&!T.relative[e[o].type];o++);return v(a>1&&y(c),a>1&&p(e.slice(0,a-1).concat({value:" "===e[a-2].type?"*":""})).replace(le,"$1"),n,o>a&&b(e.slice(a,o)),i>o&&b(e=e.slice(o)),i>o&&p(e));
}c.push(n)}return y(c)}function x(e,n){var i=n.length>0,r=e.length>0,s=function(o,s,a,u,l){var c,f,d,p=0,h="0",y=o&&[],m=[],v=A,b=o||r&&T.find.TAG("*",l),x=I+=null==v?1:Math.random()||.1,S=b.length;for(l&&(A=s!==_&&s);h!==S&&null!=(c=b[h]);h++){if(r&&c){for(f=0;d=e[f++];)if(d(c,s,a)){u.push(c);break}l&&(I=x)}i&&((c=!d&&c)&&p--,o&&y.push(c))}if(p+=h,i&&h!==p){for(f=0;d=n[f++];)d(y,m,s,a);if(o){if(p>0)for(;h--;)y[h]||m[h]||(m[h]=K.call(u));m=g(m)}ee.apply(u,m),l&&!o&&m.length>0&&p+n.length>1&&t.uniqueSort(u)}return l&&(I=x,A=v),y};return i?o(s):s}var S,w,T,C,E,k,D,N,A,j,L,O,_,q,H,M,F,P,R,B="sizzle"+-new Date,W=e.document,I=0,X=0,$=n(),Y=n(),z=n(),U=function(e,t){return e===t&&(L=!0),0},V="undefined",G=1<<31,Q={}.hasOwnProperty,J=[],K=J.pop,Z=J.push,ee=J.push,te=J.slice,ne=J.indexOf||function(e){for(var t=0,n=this.length;n>t;t++)if(this[t]===e)return t;return-1},oe="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ie="[\\x20\\t\\r\\n\\f]",re="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",se=re.replace("w","w#"),ae="\\["+ie+"*("+re+")(?:"+ie+"*([*^$|!~]?=)"+ie+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+se+"))|)"+ie+"*\\]",ue=":("+re+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+ae+")*)|.*)\\)|)",le=new RegExp("^"+ie+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ie+"+$","g"),ce=new RegExp("^"+ie+"*,"+ie+"*"),fe=new RegExp("^"+ie+"*([>+~]|"+ie+")"+ie+"*"),de=new RegExp("="+ie+"*([^\\]'\"]*?)"+ie+"*\\]","g"),pe=new RegExp(ue),he=new RegExp("^"+se+"$"),ye={ID:new RegExp("^#("+re+")"),CLASS:new RegExp("^\\.("+re+")"),TAG:new RegExp("^("+re.replace("w","w*")+")"),ATTR:new RegExp("^"+ae),PSEUDO:new RegExp("^"+ue),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ie+"*(even|odd|(([+-]|)(\\d*)n|)"+ie+"*(?:([+-]|)"+ie+"*(\\d+)|))"+ie+"*\\)|)","i"),bool:new RegExp("^(?:"+oe+")$","i"),needsContext:new RegExp("^"+ie+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ie+"*((?:-\\d)?\\d*)"+ie+"*\\)|)(?=[^-]|$)","i")},me=/^(?:input|select|textarea|button)$/i,ge=/^h\d$/i,ve=/^[^{]+\{\s*\[native \w/,be=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,xe=/[+~]/,Se=/'|\\/g,we=new RegExp("\\\\([\\da-f]{1,6}"+ie+"?|("+ie+")|.)","ig"),Te=function(e,t,n){var o="0x"+t-65536;return o!==o||n?t:0>o?String.fromCharCode(o+65536):String.fromCharCode(o>>10|55296,1023&o|56320)};try{ee.apply(J=te.call(W.childNodes),W.childNodes),J[W.childNodes.length].nodeType}catch(Ce){ee={apply:J.length?function(e,t){Z.apply(e,te.call(t))}:function(e,t){for(var n=e.length,o=0;e[n++]=t[o++];);e.length=n-1}}}w=t.support={},E=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?"HTML"!==t.nodeName:!1},O=t.setDocument=function(e){var t,n=e?e.ownerDocument||e:W,o=n.defaultView;return n!==_&&9===n.nodeType&&n.documentElement?(_=n,q=n.documentElement,H=!E(n),o&&o!==o.top&&(o.addEventListener?o.addEventListener("unload",function(){O()},!1):o.attachEvent&&o.attachEvent("onunload",function(){O()})),w.attributes=i(function(e){return e.className="i",!e.getAttribute("className")}),w.getElementsByTagName=i(function(e){return e.appendChild(n.createComment("")),!e.getElementsByTagName("*").length}),w.getElementsByClassName=ve.test(n.getElementsByClassName)&&i(function(e){return e.innerHTML="<div class='a'></div><div class='a i'></div>",e.firstChild.className="i",2===e.getElementsByClassName("i").length}),w.getById=i(function(e){return q.appendChild(e).id=B,!n.getElementsByName||!n.getElementsByName(B).length}),w.getById?(T.find.ID=function(e,t){if(u(t.getElementById)!==V&&H){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},T.filter.ID=function(e){var t=e.replace(we,Te);return function(e){return e.getAttribute("id")===t}}):(delete T.find.ID,T.filter.ID=function(e){var t=e.replace(we,Te);return function(e){var n=u(e.getAttributeNode)!==V&&e.getAttributeNode("id");return n&&n.value===t}}),T.find.TAG=w.getElementsByTagName?function(e,t){return u(t.getElementsByTagName)!==V?t.getElementsByTagName(e):void 0}:function(e,t){var n,o=[],i=0,r=t.getElementsByTagName(e);if("*"===e){for(;n=r[i++];)1===n.nodeType&&o.push(n);return o}return r},T.find.CLASS=w.getElementsByClassName&&function(e,t){return u(t.getElementsByClassName)!==V&&H?t.getElementsByClassName(e):void 0},F=[],M=[],(w.qsa=ve.test(n.querySelectorAll))&&(i(function(e){e.innerHTML="<select msallowclip=''><option selected=''></option></select>",e.querySelectorAll("[msallowclip^='']").length&&M.push("[*^$]="+ie+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||M.push("\\["+ie+"*(?:value|"+oe+")"),e.querySelectorAll(":checked").length||M.push(":checked")}),i(function(e){var t=n.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&M.push("name"+ie+"*[*^$|!~]?="),e.querySelectorAll(":enabled").length||M.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),M.push(",.*:")})),(w.matchesSelector=ve.test(P=q.matches||q.webkitMatchesSelector||q.mozMatchesSelector||q.oMatchesSelector||q.msMatchesSelector))&&i(function(e){w.disconnectedMatch=P.call(e,"div"),P.call(e,"[s!='']:x"),F.push("!=",ue)}),M=M.length&&new RegExp(M.join("|")),F=F.length&&new RegExp(F.join("|")),t=ve.test(q.compareDocumentPosition),R=t||ve.test(q.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,o=t&&t.parentNode;return e===o||!(!o||1!==o.nodeType||!(n.contains?n.contains(o):e.compareDocumentPosition&&16&e.compareDocumentPosition(o)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},U=t?function(e,t){if(e===t)return L=!0,0;var o=!e.compareDocumentPosition-!t.compareDocumentPosition;return o?o:(o=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&o||!w.sortDetached&&t.compareDocumentPosition(e)===o?e===n||e.ownerDocument===W&&R(W,e)?-1:t===n||t.ownerDocument===W&&R(W,t)?1:j?ne.call(j,e)-ne.call(j,t):0:4&o?-1:1)}:function(e,t){if(e===t)return L=!0,0;var o,i=0,r=e.parentNode,a=t.parentNode,u=[e],l=[t];if(!r||!a)return e===n?-1:t===n?1:r?-1:a?1:j?ne.call(j,e)-ne.call(j,t):0;if(r===a)return s(e,t);for(o=e;o=o.parentNode;)u.unshift(o);for(o=t;o=o.parentNode;)l.unshift(o);for(;u[i]===l[i];)i++;return i?s(u[i],l[i]):u[i]===W?-1:l[i]===W?1:0},n):_},t.matches=function(e,n){return t(e,null,null,n)},t.matchesSelector=function(e,n){if((e.ownerDocument||e)!==_&&O(e),n=n.replace(de,"='$1']"),!(!w.matchesSelector||!H||F&&F.test(n)||M&&M.test(n)))try{var o=P.call(e,n);if(o||w.disconnectedMatch||e.document&&11!==e.document.nodeType)return o}catch(i){}return t(n,_,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==_&&O(e),R(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==_&&O(e);var n=T.attrHandle[t.toLowerCase()],o=n&&Q.call(T.attrHandle,t.toLowerCase())?n(e,t,!H):void 0;return void 0!==o?o:w.attributes||!H?e.getAttribute(t):(o=e.getAttributeNode(t))&&o.specified?o.value:null},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,n=[],o=0,i=0;if(L=!w.detectDuplicates,j=!w.sortStable&&e.slice(0),e.sort(U),L){for(;t=e[i++];)t===e[i]&&(o=n.push(i));for(;o--;)e.splice(n[o],1)}return j=null,e},C=t.getText=function(e){var t,n="",o=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=C(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[o++];)n+=C(t);return n},T=t.selectors={cacheLength:50,createPseudo:o,match:ye,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(we,Te),e[3]=(e[3]||e[4]||e[5]||"").replace(we,Te),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return ye.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&pe.test(n)&&(t=k(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(we,Te).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=$[e+" "];return t||(t=new RegExp("(^|"+ie+")"+e+"("+ie+"|$)"))&&$(e,function(e){return t.test("string"==typeof e.className&&e.className||u(e.getAttribute)!==V&&e.getAttribute("class")||"")})},ATTR:function(e,n,o){return function(i){var r=t.attr(i,e);return null==r?"!="===n:n?(r+="","="===n?r===o:"!="===n?r!==o:"^="===n?o&&0===r.indexOf(o):"*="===n?o&&r.indexOf(o)>-1:"$="===n?o&&r.slice(-o.length)===o:"~="===n?(" "+r+" ").indexOf(o)>-1:"|="===n?r===o||r.slice(0,o.length+1)===o+"-":!1):!0}},CHILD:function(e,t,n,o,i){var r="nth"!==e.slice(0,3),s="last"!==e.slice(-4),a="of-type"===t;return 1===o&&0===i?function(e){return!!e.parentNode}:function(t,n,u){var l,c,f,d,p,h,y=r!==s?"nextSibling":"previousSibling",m=t.parentNode,g=a&&t.nodeName.toLowerCase(),v=!u&&!a;if(m){if(r){for(;y;){for(f=t;f=f[y];)if(a?f.nodeName.toLowerCase()===g:1===f.nodeType)return!1;h=y="only"===e&&!h&&"nextSibling"}return!0}if(h=[s?m.firstChild:m.lastChild],s&&v){for(c=m[B]||(m[B]={}),l=c[e]||[],p=l[0]===I&&l[1],d=l[0]===I&&l[2],f=p&&m.childNodes[p];f=++p&&f&&f[y]||(d=p=0)||h.pop();)if(1===f.nodeType&&++d&&f===t){c[e]=[I,p,d];break}}else if(v&&(l=(t[B]||(t[B]={}))[e])&&l[0]===I)d=l[1];else for(;(f=++p&&f&&f[y]||(d=p=0)||h.pop())&&((a?f.nodeName.toLowerCase()!==g:1!==f.nodeType)||!++d||(v&&((f[B]||(f[B]={}))[e]=[I,d]),f!==t)););return d-=i,d===o||d%o===0&&d/o>=0}}},PSEUDO:function(e,n){var i,r=T.pseudos[e]||T.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return r[B]?r(n):r.length>1?(i=[e,e,"",n],T.setFilters.hasOwnProperty(e.toLowerCase())?o(function(e,t){for(var o,i=r(e,n),s=i.length;s--;)o=ne.call(e,i[s]),e[o]=!(t[o]=i[s])}):function(e){return r(e,0,i)}):r}},pseudos:{not:o(function(e){var t=[],n=[],i=D(e.replace(le,"$1"));return i[B]?o(function(e,t,n,o){for(var r,s=i(e,null,o,[]),a=e.length;a--;)(r=s[a])&&(e[a]=!(t[a]=r))}):function(e,o,r){return t[0]=e,i(t,null,r,n),!n.pop()}}),has:o(function(e){return function(n){return t(e,n).length>0}}),contains:o(function(e){return function(t){return(t.textContent||t.innerText||C(t)).indexOf(e)>-1}}),lang:o(function(e){return he.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(we,Te).toLowerCase(),function(t){var n;do if(n=H?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===q},focus:function(e){return e===_.activeElement&&(!_.hasFocus||_.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!T.pseudos.empty(e)},header:function(e){return ge.test(e.nodeName)},input:function(e){return me.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:c(function(){return[0]}),last:c(function(e,t){return[t-1]}),eq:c(function(e,t,n){return[0>n?n+t:n]}),even:c(function(e,t){for(var n=0;t>n;n+=2)e.push(n);return e}),odd:c(function(e,t){for(var n=1;t>n;n+=2)e.push(n);return e}),lt:c(function(e,t,n){for(var o=0>n?n+t:n;--o>=0;)e.push(o);return e}),gt:c(function(e,t,n){for(var o=0>n?n+t:n;++o<t;)e.push(o);return e})}},T.pseudos.nth=T.pseudos.eq;for(S in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})T.pseudos[S]=a(S);for(S in{submit:!0,reset:!0})T.pseudos[S]=l(S);return d.prototype=T.filters=T.pseudos,T.setFilters=new d,k=t.tokenize=function(e,n){var o,i,r,s,a,u,l,c=Y[e+" "];if(c)return n?0:c.slice(0);for(a=e,u=[],l=T.preFilter;a;){(!o||(i=ce.exec(a)))&&(i&&(a=a.slice(i[0].length)||a),u.push(r=[])),o=!1,(i=fe.exec(a))&&(o=i.shift(),r.push({value:o,type:i[0].replace(le," ")}),a=a.slice(o.length));for(s in T.filter)!(i=ye[s].exec(a))||l[s]&&!(i=l[s](i))||(o=i.shift(),r.push({value:o,type:s,matches:i}),a=a.slice(o.length));if(!o)break}return n?a.length:a?t.error(e):Y(e,u).slice(0)},D=t.compile=function(e,t){var n,o=[],i=[],r=z[e+" "];if(!r){for(t||(t=k(e)),n=t.length;n--;)r=b(t[n]),r[B]?o.push(r):i.push(r);r=z(e,x(i,o)),r.selector=e}return r},N=t.select=function(e,t,n,o){var i,r,s,a,u,l="function"==typeof e&&e,c=!o&&k(e=l.selector||e);if(n=n||[],1===c.length){if(r=c[0]=c[0].slice(0),r.length>2&&"ID"===(s=r[0]).type&&w.getById&&9===t.nodeType&&H&&T.relative[r[1].type]){if(t=(T.find.ID(s.matches[0].replace(we,Te),t)||[])[0],!t)return n;l&&(t=t.parentNode),e=e.slice(r.shift().value.length)}for(i=ye.needsContext.test(e)?0:r.length;i--&&(s=r[i],!T.relative[a=s.type]);)if((u=T.find[a])&&(o=u(s.matches[0].replace(we,Te),xe.test(r[0].type)&&f(t.parentNode)||t))){if(r.splice(i,1),e=o.length&&p(r),!e)return ee.apply(n,o),n;break}}return(l||D(e,c))(o,t,!H,n,xe.test(e)&&f(t.parentNode)||t),n},w.sortStable=B.split("").sort(U).join("")===B,w.detectDuplicates=!!L,O(),w.sortDetached=i(function(e){return 1&e.compareDocumentPosition(_.createElement("div"))}),i(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||r("type|href|height|width",function(e,t,n){return n?void 0:e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),w.attributes&&i(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||r("value",function(e,t,n){return n||"input"!==e.nodeName.toLowerCase()?void 0:e.defaultValue}),i(function(e){return null==e.getAttribute("disabled")})||r(oe,function(e,t,n){var o;return n?void 0:e[t]===!0?t.toLowerCase():(o=e.getAttributeNode(t))&&o.specified?o.value:null}),t}(e);ee.find=re,ee.expr=re.selectors,ee.expr[":"]=ee.expr.pseudos,ee.unique=re.uniqueSort,ee.text=re.getText,ee.isXMLDoc=re.isXML,ee.contains=re.contains;var se=ee.expr.match.needsContext,ae=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,ue=/^.[^:#\[\.,]*$/;ee.filter=function(e,t,n){var o=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===o.nodeType?ee.find.matchesSelector(o,e)?[o]:[]:ee.find.matches(e,ee.grep(t,function(e){return 1===e.nodeType}))},ee.fn.extend({find:function(e){var t,n=this.length,o=[],i=this;if("string"!=typeof e)return this.pushStack(ee(e).filter(function(){for(t=0;n>t;t++)if(ee.contains(i[t],this))return!0}));for(t=0;n>t;t++)ee.find(e,i[t],o);return o=this.pushStack(n>1?ee.unique(o):o),o.selector=this.selector?this.selector+" "+e:e,o},filter:function(e){return this.pushStack(o(this,e||[],!1))},not:function(e){return this.pushStack(o(this,e||[],!0))},is:function(e){return!!o(this,"string"==typeof e&&se.test(e)?ee(e):e||[],!1).length}});var le,ce=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,fe=ee.fn.init=function(e,t){var n,o;if(!e)return this;if("string"==typeof e){if(n="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:ce.exec(e),!n||!n[1]&&t)return!t||t.jquery?(t||le).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof ee?t[0]:t,ee.merge(this,ee.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:K,!0)),ae.test(n[1])&&ee.isPlainObject(t))for(n in t)ee.isFunction(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return o=K.getElementById(n[2]),o&&o.parentNode&&(this.length=1,this[0]=o),this.context=K,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):ee.isFunction(e)?"undefined"!=typeof le.ready?le.ready(e):e(ee):(void 0!==e.selector&&(this.selector=e.selector,this.context=e.context),ee.makeArray(e,this))};fe.prototype=ee.fn,le=ee(K);var de=/^(?:parents|prev(?:Until|All))/,pe={children:!0,contents:!0,next:!0,prev:!0};ee.extend({dir:function(e,t,n){for(var o=[],i=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(i&&ee(e).is(n))break;o.push(e)}return o},sibling:function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}}),ee.fn.extend({has:function(e){var t=ee(e,this),n=t.length;return this.filter(function(){for(var e=0;n>e;e++)if(ee.contains(this,t[e]))return!0})},closest:function(e,t){for(var n,o=0,i=this.length,r=[],s=se.test(e)||"string"!=typeof e?ee(e,t||this.context):0;i>o;o++)for(n=this[o];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(s?s.index(n)>-1:1===n.nodeType&&ee.find.matchesSelector(n,e))){r.push(n);break}return this.pushStack(r.length>1?ee.unique(r):r)},index:function(e){return e?"string"==typeof e?U.call(ee(e),this[0]):U.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(ee.unique(ee.merge(this.get(),ee(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),ee.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return ee.dir(e,"parentNode")},parentsUntil:function(e,t,n){return ee.dir(e,"parentNode",n)},next:function(e){return i(e,"nextSibling")},prev:function(e){return i(e,"previousSibling")},nextAll:function(e){return ee.dir(e,"nextSibling")},prevAll:function(e){return ee.dir(e,"previousSibling")},nextUntil:function(e,t,n){return ee.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return ee.dir(e,"previousSibling",n)},siblings:function(e){return ee.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return ee.sibling(e.firstChild)},contents:function(e){return e.contentDocument||ee.merge([],e.childNodes)}},function(e,t){ee.fn[e]=function(n,o){var i=ee.map(this,t,n);return"Until"!==e.slice(-5)&&(o=n),o&&"string"==typeof o&&(i=ee.filter(o,i)),this.length>1&&(pe[e]||ee.unique(i),de.test(e)&&i.reverse()),this.pushStack(i)}});var he=/\S+/g,ye={};ee.Callbacks=function(e){e="string"==typeof e?ye[e]||r(e):ee.extend({},e);var t,n,o,i,s,a,u=[],l=!e.once&&[],c=function d(r){for(t=e.memory&&r,n=!0,a=i||0,i=0,s=u.length,o=!0;u&&s>a;a++)if(u[a].apply(r[0],r[1])===!1&&e.stopOnFalse){t=!1;break}o=!1,u&&(l?l.length&&d(l.shift()):t?u=[]:f.disable())},f={add:function(){if(u){var n=u.length;!function r(t){ee.each(t,function(t,n){var o=ee.type(n);"function"===o?e.unique&&f.has(n)||u.push(n):n&&n.length&&"string"!==o&&r(n)})}(arguments),o?s=u.length:t&&(i=n,c(t))}return this},remove:function(){return u&&ee.each(arguments,function(e,t){for(var n;(n=ee.inArray(t,u,n))>-1;)u.splice(n,1),o&&(s>=n&&s--,a>=n&&a--)}),this},has:function(e){return e?ee.inArray(e,u)>-1:!(!u||!u.length)},empty:function(){return u=[],s=0,this},disable:function(){return u=l=t=void 0,this},disabled:function(){return!u},lock:function(){return l=void 0,t||f.disable(),this},locked:function(){return!l},fireWith:function(e,t){return!u||n&&!l||(t=t||[],t=[e,t.slice?t.slice():t],o?l.push(t):c(t)),this},fire:function(){return f.fireWith(this,arguments),this},fired:function(){return!!n}};return f},ee.extend({Deferred:function(e){var t=[["resolve","done",ee.Callbacks("once memory"),"resolved"],["reject","fail",ee.Callbacks("once memory"),"rejected"],["notify","progress",ee.Callbacks("memory")]],n="pending",o={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return ee.Deferred(function(n){ee.each(t,function(t,r){var s=ee.isFunction(e[t])&&e[t];i[r[1]](function(){var e=s&&s.apply(this,arguments);e&&ee.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[r[0]+"With"](this===o?n.promise():this,s?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?ee.extend(e,o):o}},i={};return o.pipe=o.then,ee.each(t,function(e,r){var s=r[2],a=r[3];o[r[1]]=s.add,a&&s.add(function(){n=a},t[1^e][2].disable,t[2][2].lock),i[r[0]]=function(){return i[r[0]+"With"](this===i?o:this,arguments),this},i[r[0]+"With"]=s.fireWith}),o.promise(i),e&&e.call(i,i),i},when:function(e){var t,n,o,i=0,r=$.call(arguments),s=r.length,a=1!==s||e&&ee.isFunction(e.promise)?s:0,u=1===a?e:ee.Deferred(),l=function(e,n,o){return function(i){n[e]=this,o[e]=arguments.length>1?$.call(arguments):i,o===t?u.notifyWith(n,o):--a||u.resolveWith(n,o)}};if(s>1)for(t=new Array(s),n=new Array(s),o=new Array(s);s>i;i++)r[i]&&ee.isFunction(r[i].promise)?r[i].promise().done(l(i,o,r)).fail(u.reject).progress(l(i,n,t)):--a;return a||u.resolveWith(o,r),u.promise()}});var me;ee.fn.ready=function(e){return ee.ready.promise().done(e),this},ee.extend({isReady:!1,readyWait:1,holdReady:function(e){e?ee.readyWait++:ee.ready(!0)},ready:function(e){(e===!0?--ee.readyWait:ee.isReady)||(ee.isReady=!0,e!==!0&&--ee.readyWait>0||(me.resolveWith(K,[ee]),ee.fn.triggerHandler&&(ee(K).triggerHandler("ready"),ee(K).off("ready"))))}}),ee.ready.promise=function(t){return me||(me=ee.Deferred(),"complete"===K.readyState?setTimeout(ee.ready):(K.addEventListener("DOMContentLoaded",s,!1),e.addEventListener("load",s,!1))),me.promise(t)},ee.ready.promise();var ge=ee.access=function(e,t,n,o,i,r,s){var a=0,u=e.length,l=null==n;if("object"===ee.type(n)){i=!0;for(a in n)ee.access(e,t,a,n[a],!0,r,s)}else if(void 0!==o&&(i=!0,ee.isFunction(o)||(s=!0),l&&(s?(t.call(e,o),t=null):(l=t,t=function(e,t,n){return l.call(ee(e),n)})),t))for(;u>a;a++)t(e[a],n,s?o:o.call(e[a],a,t(e[a],n)));return i?e:l?t.call(e):u?t(e[0],n):r};ee.acceptData=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType},a.uid=1,a.accepts=ee.acceptData,a.prototype={key:function(e){if(!a.accepts(e))return 0;var t={},n=e[this.expando];if(!n){n=a.uid++;try{t[this.expando]={value:n},Object.defineProperties(e,t)}catch(o){t[this.expando]=n,ee.extend(e,t)}}return this.cache[n]||(this.cache[n]={}),n},set:function(e,t,n){var o,i=this.key(e),r=this.cache[i];if("string"==typeof t)r[t]=n;else if(ee.isEmptyObject(r))ee.extend(this.cache[i],t);else for(o in t)r[o]=t[o];return r},get:function(e,t){var n=this.cache[this.key(e)];return void 0===t?n:n[t]},access:function(e,t,n){var o;return void 0===t||t&&"string"==typeof t&&void 0===n?(o=this.get(e,t),void 0!==o?o:this.get(e,ee.camelCase(t))):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,o,i,r=this.key(e),s=this.cache[r];if(void 0===t)this.cache[r]={};else{ee.isArray(t)?o=t.concat(t.map(ee.camelCase)):(i=ee.camelCase(t),t in s?o=[t,i]:(o=i,o=o in s?[o]:o.match(he)||[])),n=o.length;for(;n--;)delete s[o[n]]}},hasData:function(e){return!ee.isEmptyObject(this.cache[e[this.expando]]||{})},discard:function(e){e[this.expando]&&delete this.cache[e[this.expando]]}};var ve=new a,be=new a,xe=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Se=/([A-Z])/g;ee.extend({hasData:function(e){return be.hasData(e)||ve.hasData(e)},data:function(e,t,n){return be.access(e,t,n)},removeData:function(e,t){be.remove(e,t)},_data:function(e,t,n){return ve.access(e,t,n)},_removeData:function(e,t){ve.remove(e,t)}}),ee.fn.extend({data:function(e,t){var n,o,i,r=this[0],s=r&&r.attributes;if(void 0===e){if(this.length&&(i=be.get(r),1===r.nodeType&&!ve.get(r,"hasDataAttrs"))){for(n=s.length;n--;)s[n]&&(o=s[n].name,0===o.indexOf("data-")&&(o=ee.camelCase(o.slice(5)),l(r,o,i[o])));ve.set(r,"hasDataAttrs",!0)}return i}return"object"==("undefined"==typeof e?"undefined":u(e))?this.each(function(){be.set(this,e)}):ge(this,function(t){var n,o=ee.camelCase(e);if(r&&void 0===t){if(n=be.get(r,e),void 0!==n)return n;if(n=be.get(r,o),void 0!==n)return n;if(n=l(r,o,void 0),void 0!==n)return n}else this.each(function(){var n=be.get(this,o);be.set(this,o,t),-1!==e.indexOf("-")&&void 0!==n&&be.set(this,e,t)})},null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){be.remove(this,e)})}}),ee.extend({queue:function(e,t,n){var o;return e?(t=(t||"fx")+"queue",o=ve.get(e,t),n&&(!o||ee.isArray(n)?o=ve.access(e,t,ee.makeArray(n)):o.push(n)),o||[]):void 0},dequeue:function(e,t){t=t||"fx";var n=ee.queue(e,t),o=n.length,i=n.shift(),r=ee._queueHooks(e,t),s=function(){ee.dequeue(e,t)};"inprogress"===i&&(i=n.shift(),o--),i&&("fx"===t&&n.unshift("inprogress"),delete r.stop,i.call(e,s,r)),!o&&r&&r.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return ve.get(e,n)||ve.access(e,n,{empty:ee.Callbacks("once memory").add(function(){ve.remove(e,[t+"queue",n])})})}}),ee.fn.extend({queue:function(e,t){var n=2;return"string"!=typeof e&&(t=e,e="fx",n--),arguments.length<n?ee.queue(this[0],e):void 0===t?this:this.each(function(){var n=ee.queue(this,e,t);ee._queueHooks(this,e),"fx"===e&&"inprogress"!==n[0]&&ee.dequeue(this,e)})},dequeue:function(e){return this.each(function(){ee.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,o=1,i=ee.Deferred(),r=this,s=this.length,a=function(){--o||i.resolveWith(r,[r])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";s--;)n=ve.get(r[s],e+"queueHooks"),n&&n.empty&&(o++,n.empty.add(a));return a(),i.promise(t)}});var we=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Te=["Top","Right","Bottom","Left"],Ce=function(e,t){return e=t||e,"none"===ee.css(e,"display")||!ee.contains(e.ownerDocument,e)},Ee=/^(?:checkbox|radio)$/i;!function(){var e=K.createDocumentFragment(),t=e.appendChild(K.createElement("div")),n=K.createElement("input");n.setAttribute("type","radio"),n.setAttribute("checked","checked"),n.setAttribute("name","t"),t.appendChild(n),J.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,t.innerHTML="<textarea>x</textarea>",J.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue}();var ke="undefined";J.focusinBubbles="onfocusin"in e;var De=/^key/,Ne=/^(?:mouse|pointer|contextmenu)|click/,Ae=/^(?:focusinfocus|focusoutblur)$/,je=/^([^.]*)(?:\.(.+)|)$/;ee.event={global:{},add:function(e,t,n,o,i){var r,s,a,l,c,f,d,p,h,y,m,g=ve.get(e);if(g)for(n.handler&&(r=n,n=r.handler,i=r.selector),n.guid||(n.guid=ee.guid++),(l=g.events)||(l=g.events={}),(s=g.handle)||(s=g.handle=function(t){return("undefined"==typeof ee?"undefined":u(ee))!==ke&&ee.event.triggered!==t.type?ee.event.dispatch.apply(e,arguments):void 0}),t=(t||"").match(he)||[""],c=t.length;c--;)a=je.exec(t[c])||[],h=m=a[1],y=(a[2]||"").split(".").sort(),h&&(d=ee.event.special[h]||{},h=(i?d.delegateType:d.bindType)||h,d=ee.event.special[h]||{},f=ee.extend({type:h,origType:m,data:o,handler:n,guid:n.guid,selector:i,needsContext:i&&ee.expr.match.needsContext.test(i),namespace:y.join(".")},r),(p=l[h])||(p=l[h]=[],p.delegateCount=0,d.setup&&d.setup.call(e,o,y,s)!==!1||e.addEventListener&&e.addEventListener(h,s,!1)),d.add&&(d.add.call(e,f),f.handler.guid||(f.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,f):p.push(f),ee.event.global[h]=!0)},remove:function(e,t,n,o,i){var r,s,a,u,l,c,f,d,p,h,y,m=ve.hasData(e)&&ve.get(e);if(m&&(u=m.events)){for(t=(t||"").match(he)||[""],l=t.length;l--;)if(a=je.exec(t[l])||[],p=y=a[1],h=(a[2]||"").split(".").sort(),p){for(f=ee.event.special[p]||{},p=(o?f.delegateType:f.bindType)||p,d=u[p]||[],a=a[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=r=d.length;r--;)c=d[r],!i&&y!==c.origType||n&&n.guid!==c.guid||a&&!a.test(c.namespace)||o&&o!==c.selector&&("**"!==o||!c.selector)||(d.splice(r,1),c.selector&&d.delegateCount--,f.remove&&f.remove.call(e,c));s&&!d.length&&(f.teardown&&f.teardown.call(e,h,m.handle)!==!1||ee.removeEvent(e,p,m.handle),delete u[p])}else for(p in u)ee.event.remove(e,p+t[l],n,o,!0);ee.isEmptyObject(u)&&(delete m.handle,ve.remove(e,"events"))}},trigger:function(t,n,o,i){var r,s,a,l,c,f,d,p=[o||K],h=Q.call(t,"type")?t.type:t,y=Q.call(t,"namespace")?t.namespace.split("."):[];if(s=a=o=o||K,3!==o.nodeType&&8!==o.nodeType&&!Ae.test(h+ee.event.triggered)&&(h.indexOf(".")>=0&&(y=h.split("."),h=y.shift(),y.sort()),c=h.indexOf(":")<0&&"on"+h,t=t[ee.expando]?t:new ee.Event(h,"object"==("undefined"==typeof t?"undefined":u(t))&&t),t.isTrigger=i?2:3,t.namespace=y.join("."),t.namespace_re=t.namespace?new RegExp("(^|\\.)"+y.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=o),n=null==n?[t]:ee.makeArray(n,[t]),d=ee.event.special[h]||{},i||!d.trigger||d.trigger.apply(o,n)!==!1)){if(!i&&!d.noBubble&&!ee.isWindow(o)){for(l=d.delegateType||h,Ae.test(l+h)||(s=s.parentNode);s;s=s.parentNode)p.push(s),a=s;a===(o.ownerDocument||K)&&p.push(a.defaultView||a.parentWindow||e)}for(r=0;(s=p[r++])&&!t.isPropagationStopped();)t.type=r>1?l:d.bindType||h,f=(ve.get(s,"events")||{})[t.type]&&ve.get(s,"handle"),f&&f.apply(s,n),f=c&&s[c],f&&f.apply&&ee.acceptData(s)&&(t.result=f.apply(s,n),t.result===!1&&t.preventDefault());return t.type=h,i||t.isDefaultPrevented()||d._default&&d._default.apply(p.pop(),n)!==!1||!ee.acceptData(o)||c&&ee.isFunction(o[h])&&!ee.isWindow(o)&&(a=o[c],a&&(o[c]=null),ee.event.triggered=h,o[h](),ee.event.triggered=void 0,a&&(o[c]=a)),t.result}},dispatch:function(e){e=ee.event.fix(e);var t,n,o,i,r,s=[],a=$.call(arguments),u=(ve.get(this,"events")||{})[e.type]||[],l=ee.event.special[e.type]||{};if(a[0]=e,e.delegateTarget=this,!l.preDispatch||l.preDispatch.call(this,e)!==!1){for(s=ee.event.handlers.call(this,e,u),t=0;(i=s[t++])&&!e.isPropagationStopped();)for(e.currentTarget=i.elem,n=0;(r=i.handlers[n++])&&!e.isImmediatePropagationStopped();)(!e.namespace_re||e.namespace_re.test(r.namespace))&&(e.handleObj=r,e.data=r.data,o=((ee.event.special[r.origType]||{}).handle||r.handler).apply(i.elem,a),void 0!==o&&(e.result=o)===!1&&(e.preventDefault(),e.stopPropagation()));return l.postDispatch&&l.postDispatch.call(this,e),e.result}},handlers:function(e,t){var n,o,i,r,s=[],a=t.delegateCount,u=e.target;if(a&&u.nodeType&&(!e.button||"click"!==e.type))for(;u!==this;u=u.parentNode||this)if(u.disabled!==!0||"click"!==e.type){for(o=[],n=0;a>n;n++)r=t[n],i=r.selector+" ",void 0===o[i]&&(o[i]=r.needsContext?ee(i,this).index(u)>=0:ee.find(i,this,null,[u]).length),o[i]&&o.push(r);o.length&&s.push({elem:u,handlers:o})}return a<t.length&&s.push({elem:this,handlers:t.slice(a)}),s},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,t){var n,o,i,r=t.button;return null==e.pageX&&null!=t.clientX&&(n=e.target.ownerDocument||K,o=n.documentElement,i=n.body,e.pageX=t.clientX+(o&&o.scrollLeft||i&&i.scrollLeft||0)-(o&&o.clientLeft||i&&i.clientLeft||0),e.pageY=t.clientY+(o&&o.scrollTop||i&&i.scrollTop||0)-(o&&o.clientTop||i&&i.clientTop||0)),e.which||void 0===r||(e.which=1&r?1:2&r?3:4&r?2:0),e}},fix:function(e){if(e[ee.expando])return e;var t,n,o,i=e.type,r=e,s=this.fixHooks[i];for(s||(this.fixHooks[i]=s=Ne.test(i)?this.mouseHooks:De.test(i)?this.keyHooks:{}),o=s.props?this.props.concat(s.props):this.props,e=new ee.Event(r),t=o.length;t--;)n=o[t],e[n]=r[n];return e.target||(e.target=K),3===e.target.nodeType&&(e.target=e.target.parentNode),s.filter?s.filter(e,r):e},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==d()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===d()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&ee.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(e){return ee.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result);
}}},simulate:function(e,t,n,o){var i=ee.extend(new ee.Event,n,{type:e,isSimulated:!0,originalEvent:{}});o?ee.event.trigger(i,null,t):ee.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},ee.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)},ee.Event=function(e,t){return this instanceof ee.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&e.returnValue===!1?c:f):this.type=e,t&&ee.extend(this,t),this.timeStamp=e&&e.timeStamp||ee.now(),void(this[ee.expando]=!0)):new ee.Event(e,t)},ee.Event.prototype={isDefaultPrevented:f,isPropagationStopped:f,isImmediatePropagationStopped:f,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=c,e&&e.preventDefault&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=c,e&&e.stopPropagation&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=c,e&&e.stopImmediatePropagation&&e.stopImmediatePropagation(),this.stopPropagation()}},ee.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){ee.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,o=this,i=e.relatedTarget,r=e.handleObj;return(!i||i!==o&&!ee.contains(o,i))&&(e.type=r.origType,n=r.handler.apply(this,arguments),e.type=t),n}}}),J.focusinBubbles||ee.each({focus:"focusin",blur:"focusout"},function(e,t){var n=function(e){ee.event.simulate(t,e.target,ee.event.fix(e),!0)};ee.event.special[t]={setup:function(){var o=this.ownerDocument||this,i=ve.access(o,t);i||o.addEventListener(e,n,!0),ve.access(o,t,(i||0)+1)},teardown:function(){var o=this.ownerDocument||this,i=ve.access(o,t)-1;i?ve.access(o,t,i):(o.removeEventListener(e,n,!0),ve.remove(o,t))}}}),ee.fn.extend({on:function(e,t,n,o,i){var r,s;if("object"==("undefined"==typeof e?"undefined":u(e))){"string"!=typeof t&&(n=n||t,t=void 0);for(s in e)this.on(s,t,n,e[s],i);return this}if(null==n&&null==o?(o=t,n=t=void 0):null==o&&("string"==typeof t?(o=n,n=void 0):(o=n,n=t,t=void 0)),o===!1)o=f;else if(!o)return this;return 1===i&&(r=o,o=function(e){return ee().off(e),r.apply(this,arguments)},o.guid=r.guid||(r.guid=ee.guid++)),this.each(function(){ee.event.add(this,e,o,n,t)})},one:function(e,t,n,o){return this.on(e,t,n,o,1)},off:function(e,t,n){var o,i;if(e&&e.preventDefault&&e.handleObj)return o=e.handleObj,ee(e.delegateTarget).off(o.namespace?o.origType+"."+o.namespace:o.origType,o.selector,o.handler),this;if("object"==("undefined"==typeof e?"undefined":u(e))){for(i in e)this.off(i,t,e[i]);return this}return(t===!1||"function"==typeof t)&&(n=t,t=void 0),n===!1&&(n=f),this.each(function(){ee.event.remove(this,e,n,t)})},trigger:function(e,t){return this.each(function(){ee.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];return n?ee.event.trigger(e,t,n,!0):void 0}});var Le=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,Oe=/<([\w:]+)/,_e=/<|&#?\w+;/,qe=/<(?:script|style|link)/i,He=/checked\s*(?:[^=]|=\s*.checked.)/i,Me=/^$|\/(?:java|ecma)script/i,Fe=/^true\/(.*)/,Pe=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,Re={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Re.optgroup=Re.option,Re.tbody=Re.tfoot=Re.colgroup=Re.caption=Re.thead,Re.th=Re.td,ee.extend({clone:function(e,t,n){var o,i,r,s,a=e.cloneNode(!0),u=ee.contains(e.ownerDocument,e);if(!(J.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||ee.isXMLDoc(e)))for(s=v(a),r=v(e),o=0,i=r.length;i>o;o++)b(r[o],s[o]);if(t)if(n)for(r=r||v(e),s=s||v(a),o=0,i=r.length;i>o;o++)g(r[o],s[o]);else g(e,a);return s=v(a,"script"),s.length>0&&m(s,!u&&v(e,"script")),a},buildFragment:function(e,t,n,o){for(var i,r,s,a,u,l,c=t.createDocumentFragment(),f=[],d=0,p=e.length;p>d;d++)if(i=e[d],i||0===i)if("object"===ee.type(i))ee.merge(f,i.nodeType?[i]:i);else if(_e.test(i)){for(r=r||c.appendChild(t.createElement("div")),s=(Oe.exec(i)||["",""])[1].toLowerCase(),a=Re[s]||Re._default,r.innerHTML=a[1]+i.replace(Le,"<$1></$2>")+a[2],l=a[0];l--;)r=r.lastChild;ee.merge(f,r.childNodes),r=c.firstChild,r.textContent=""}else f.push(t.createTextNode(i));for(c.textContent="",d=0;i=f[d++];)if((!o||-1===ee.inArray(i,o))&&(u=ee.contains(i.ownerDocument,i),r=v(c.appendChild(i),"script"),u&&m(r),n))for(l=0;i=r[l++];)Me.test(i.type||"")&&n.push(i);return c},cleanData:function(e){for(var t,n,o,i,r=ee.event.special,s=0;void 0!==(n=e[s]);s++){if(ee.acceptData(n)&&(i=n[ve.expando],i&&(t=ve.cache[i]))){if(t.events)for(o in t.events)r[o]?ee.event.remove(n,o):ee.removeEvent(n,o,t.handle);ve.cache[i]&&delete ve.cache[i]}delete be.cache[n[be.expando]]}}}),ee.fn.extend({text:function(e){return ge(this,function(e){return void 0===e?ee.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=e)})},null,e,arguments.length)},append:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=p(this,e);t.appendChild(e)}})},prepend:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=p(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){for(var n,o=e?ee.filter(e,this):this,i=0;null!=(n=o[i]);i++)t||1!==n.nodeType||ee.cleanData(v(n)),n.parentNode&&(t&&ee.contains(n.ownerDocument,n)&&m(v(n,"script")),n.parentNode.removeChild(n));return this},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(ee.cleanData(v(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return ee.clone(this,e,t)})},html:function(e){return ge(this,function(e){var t=this[0]||{},n=0,o=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!qe.test(e)&&!Re[(Oe.exec(e)||["",""])[1].toLowerCase()]){e=e.replace(Le,"<$1></$2>");try{for(;o>n;n++)t=this[n]||{},1===t.nodeType&&(ee.cleanData(v(t,!1)),t.innerHTML=e);t=0}catch(i){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=arguments[0];return this.domManip(arguments,function(t){e=this.parentNode,ee.cleanData(v(this)),e&&e.replaceChild(t,this)}),e&&(e.length||e.nodeType)?this:this.remove()},detach:function(e){return this.remove(e,!0)},domManip:function(e,t){e=Y.apply([],e);var n,o,i,r,s,a,u=0,l=this.length,c=this,f=l-1,d=e[0],p=ee.isFunction(d);if(p||l>1&&"string"==typeof d&&!J.checkClone&&He.test(d))return this.each(function(n){var o=c.eq(n);p&&(e[0]=d.call(this,n,o.html())),o.domManip(e,t)});if(l&&(n=ee.buildFragment(e,this[0].ownerDocument,!1,this),o=n.firstChild,1===n.childNodes.length&&(n=o),o)){for(i=ee.map(v(n,"script"),h),r=i.length;l>u;u++)s=n,u!==f&&(s=ee.clone(s,!0,!0),r&&ee.merge(i,v(s,"script"))),t.call(this[u],s,u);if(r)for(a=i[i.length-1].ownerDocument,ee.map(i,y),u=0;r>u;u++)s=i[u],Me.test(s.type||"")&&!ve.access(s,"globalEval")&&ee.contains(a,s)&&(s.src?ee._evalUrl&&ee._evalUrl(s.src):ee.globalEval(s.textContent.replace(Pe,"")))}return this}}),ee.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){ee.fn[e]=function(e){for(var n,o=[],i=ee(e),r=i.length-1,s=0;r>=s;s++)n=s===r?this:this.clone(!0),ee(i[s])[t](n),z.apply(o,n.get());return this.pushStack(o)}});var Be,We={},Ie=/^margin/,Xe=new RegExp("^("+we+")(?!px)[a-z%]+$","i"),$e=function(e){return e.ownerDocument.defaultView.getComputedStyle(e,null)};!function(){var t,n,o=K.documentElement,i=K.createElement("div"),r=K.createElement("div");r.style&&!function(){var s=function a(){r.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",r.innerHTML="",o.appendChild(i);var a=e.getComputedStyle(r,null);t="1%"!==a.top,n="4px"===a.width,o.removeChild(i)};r.style.backgroundClip="content-box",r.cloneNode(!0).style.backgroundClip="",J.clearCloneStyle="content-box"===r.style.backgroundClip,i.style.cssText="border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",i.appendChild(r),e.getComputedStyle&&ee.extend(J,{pixelPosition:function(){return s(),t},boxSizingReliable:function(){return null==n&&s(),n},reliableMarginRight:function(){var t,n=r.appendChild(K.createElement("div"));return n.style.cssText=r.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",n.style.marginRight=n.style.width="0",r.style.width="1px",o.appendChild(i),t=!parseFloat(e.getComputedStyle(n,null).marginRight),o.removeChild(i),t}})}()}(),ee.swap=function(e,t,n,o){var i,r,s={};for(r in t)s[r]=e.style[r],e.style[r]=t[r];i=n.apply(e,o||[]);for(r in t)e.style[r]=s[r];return i};var Ye=/^(none|table(?!-c[ea]).+)/,ze=new RegExp("^("+we+")(.*)$","i"),Ue=new RegExp("^([+-])=("+we+")","i"),Ve={position:"absolute",visibility:"hidden",display:"block"},Ge={letterSpacing:"0",fontWeight:"400"},Qe=["Webkit","O","Moz","ms"];ee.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=w(e,"opacity");return""===n?"1":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(e,t,n,o){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,r,s,a=ee.camelCase(t),l=e.style;return t=ee.cssProps[a]||(ee.cssProps[a]=C(l,a)),s=ee.cssHooks[t]||ee.cssHooks[a],void 0===n?s&&"get"in s&&void 0!==(i=s.get(e,!1,o))?i:l[t]:(r="undefined"==typeof n?"undefined":u(n),"string"===r&&(i=Ue.exec(n))&&(n=(i[1]+1)*i[2]+parseFloat(ee.css(e,t)),r="number"),void(null!=n&&n===n&&("number"!==r||ee.cssNumber[a]||(n+="px"),J.clearCloneStyle||""!==n||0!==t.indexOf("background")||(l[t]="inherit"),s&&"set"in s&&void 0===(n=s.set(e,n,o))||(l[t]=n))))}},css:function(e,t,n,o){var i,r,s,a=ee.camelCase(t);return t=ee.cssProps[a]||(ee.cssProps[a]=C(e.style,a)),s=ee.cssHooks[t]||ee.cssHooks[a],s&&"get"in s&&(i=s.get(e,!0,n)),void 0===i&&(i=w(e,t,o)),"normal"===i&&t in Ge&&(i=Ge[t]),""===n||n?(r=parseFloat(i),n===!0||ee.isNumeric(r)?r||0:i):i}}),ee.each(["height","width"],function(e,t){ee.cssHooks[t]={get:function(e,n,o){return n?Ye.test(ee.css(e,"display"))&&0===e.offsetWidth?ee.swap(e,Ve,function(){return D(e,t,o)}):D(e,t,o):void 0},set:function(e,n,o){var i=o&&$e(e);return E(e,n,o?k(e,t,o,"border-box"===ee.css(e,"boxSizing",!1,i),i):0)}}}),ee.cssHooks.marginRight=T(J.reliableMarginRight,function(e,t){return t?ee.swap(e,{display:"inline-block"},w,[e,"marginRight"]):void 0}),ee.each({margin:"",padding:"",border:"Width"},function(e,t){ee.cssHooks[e+t]={expand:function(n){for(var o=0,i={},r="string"==typeof n?n.split(" "):[n];4>o;o++)i[e+Te[o]+t]=r[o]||r[o-2]||r[0];return i}},Ie.test(e)||(ee.cssHooks[e+t].set=E)}),ee.fn.extend({css:function(e,t){return ge(this,function(e,t,n){var o,i,r={},s=0;if(ee.isArray(t)){for(o=$e(e),i=t.length;i>s;s++)r[t[s]]=ee.css(e,t[s],!1,o);return r}return void 0!==n?ee.style(e,t,n):ee.css(e,t)},e,t,arguments.length>1)},show:function(){return N(this,!0)},hide:function(){return N(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){Ce(this)?ee(this).show():ee(this).hide()})}}),ee.Tween=A,A.prototype={constructor:A,init:function(e,t,n,o,i,r){this.elem=e,this.prop=n,this.easing=i||"swing",this.options=t,this.start=this.now=this.cur(),this.end=o,this.unit=r||(ee.cssNumber[n]?"":"px")},cur:function(){var e=A.propHooks[this.prop];return e&&e.get?e.get(this):A.propHooks._default.get(this)},run:function(e){var t,n=A.propHooks[this.prop];return this.pos=t=this.options.duration?ee.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):A.propHooks._default.set(this),this}},A.prototype.init.prototype=A.prototype,A.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=ee.css(e.elem,e.prop,""),t&&"auto"!==t?t:0):e.elem[e.prop]},set:function(e){ee.fx.step[e.prop]?ee.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[ee.cssProps[e.prop]]||ee.cssHooks[e.prop])?ee.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},A.propHooks.scrollTop=A.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},ee.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},ee.fx=A.prototype.init,ee.fx.step={};var Je,Ke,Ze=/^(?:toggle|show|hide)$/,et=new RegExp("^(?:([+-])=|)("+we+")([a-z%]*)$","i"),tt=/queueHooks$/,nt=[_],ot={"*":[function(e,t){var n=this.createTween(e,t),o=n.cur(),i=et.exec(t),r=i&&i[3]||(ee.cssNumber[e]?"":"px"),s=(ee.cssNumber[e]||"px"!==r&&+o)&&et.exec(ee.css(n.elem,e)),a=1,u=20;if(s&&s[3]!==r){r=r||s[3],i=i||[],s=+o||1;do a=a||".5",s/=a,ee.style(n.elem,e,s+r);while(a!==(a=n.cur()/o)&&1!==a&&--u)}return i&&(s=n.start=+s||+o||0,n.unit=r,n.end=i[1]?s+(i[1]+1)*i[2]:+i[2]),n}]};ee.Animation=ee.extend(H,{tweener:function(e,t){ee.isFunction(e)?(t=e,e=["*"]):e=e.split(" ");for(var n,o=0,i=e.length;i>o;o++)n=e[o],ot[n]=ot[n]||[],ot[n].unshift(t)},prefilter:function(e,t){t?nt.unshift(e):nt.push(e)}}),ee.speed=function(e,t,n){var o=e&&"object"==("undefined"==typeof e?"undefined":u(e))?ee.extend({},e):{complete:n||!n&&t||ee.isFunction(e)&&e,duration:e,easing:n&&t||t&&!ee.isFunction(t)&&t};return o.duration=ee.fx.off?0:"number"==typeof o.duration?o.duration:o.duration in ee.fx.speeds?ee.fx.speeds[o.duration]:ee.fx.speeds._default,(null==o.queue||o.queue===!0)&&(o.queue="fx"),o.old=o.complete,o.complete=function(){ee.isFunction(o.old)&&o.old.call(this),o.queue&&ee.dequeue(this,o.queue)},o},ee.fn.extend({fadeTo:function(e,t,n,o){return this.filter(Ce).css("opacity",0).show().end().animate({opacity:t},e,n,o)},animate:function(e,t,n,o){var i=ee.isEmptyObject(e),r=ee.speed(t,n,o),s=function(){var t=H(this,ee.extend({},e),r);(i||ve.get(this,"finish"))&&t.stop(!0)};return s.finish=s,i||r.queue===!1?this.each(s):this.queue(r.queue,s)},stop:function(e,t,n){var o=function(e){var t=e.stop;delete e.stop,t(n)};return"string"!=typeof e&&(n=t,t=e,e=void 0),t&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,i=null!=e&&e+"queueHooks",r=ee.timers,s=ve.get(this);if(i)s[i]&&s[i].stop&&o(s[i]);else for(i in s)s[i]&&s[i].stop&&tt.test(i)&&o(s[i]);for(i=r.length;i--;)r[i].elem!==this||null!=e&&r[i].queue!==e||(r[i].anim.stop(n),t=!1,r.splice(i,1));(t||!n)&&ee.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,n=ve.get(this),o=n[e+"queue"],i=n[e+"queueHooks"],r=ee.timers,s=o?o.length:0;for(n.finish=!0,ee.queue(this,e,[]),i&&i.stop&&i.stop.call(this,!0),t=r.length;t--;)r[t].elem===this&&r[t].queue===e&&(r[t].anim.stop(!0),r.splice(t,1));for(t=0;s>t;t++)o[t]&&o[t].finish&&o[t].finish.call(this);delete n.finish})}}),ee.each(["toggle","show","hide"],function(e,t){var n=ee.fn[t];ee.fn[t]=function(e,o,i){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(L(t,!0),e,o,i)}}),ee.each({slideDown:L("show"),slideUp:L("hide"),slideToggle:L("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){ee.fn[e]=function(e,n,o){return this.animate(t,e,n,o)}}),ee.timers=[],ee.fx.tick=function(){var e,t=0,n=ee.timers;for(Je=ee.now();t<n.length;t++)e=n[t],e()||n[t]!==e||n.splice(t--,1);n.length||ee.fx.stop(),Je=void 0},ee.fx.timer=function(e){ee.timers.push(e),e()?ee.fx.start():ee.timers.pop()},ee.fx.interval=13,ee.fx.start=function(){Ke||(Ke=setInterval(ee.fx.tick,ee.fx.interval))},ee.fx.stop=function(){clearInterval(Ke),Ke=null},ee.fx.speeds={slow:600,fast:200,_default:400},ee.fn.delay=function(e,t){return e=ee.fx?ee.fx.speeds[e]||e:e,t=t||"fx",this.queue(t,function(t,n){var o=setTimeout(t,e);n.stop=function(){clearTimeout(o)}})},function(){var e=K.createElement("input"),t=K.createElement("select"),n=t.appendChild(K.createElement("option"));e.type="checkbox",J.checkOn=""!==e.value,J.optSelected=n.selected,t.disabled=!0,J.optDisabled=!n.disabled,e=K.createElement("input"),e.value="t",e.type="radio",J.radioValue="t"===e.value}();var it,rt,st=ee.expr.attrHandle;ee.fn.extend({attr:function(e,t){return ge(this,ee.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){ee.removeAttr(this,e)})}}),ee.extend({attr:function(e,t,n){var o,i,r=e.nodeType;return e&&3!==r&&8!==r&&2!==r?u(e.getAttribute)===ke?ee.prop(e,t,n):(1===r&&ee.isXMLDoc(e)||(t=t.toLowerCase(),o=ee.attrHooks[t]||(ee.expr.match.bool.test(t)?rt:it)),void 0===n?o&&"get"in o&&null!==(i=o.get(e,t))?i:(i=ee.find.attr(e,t),null==i?void 0:i):null!==n?o&&"set"in o&&void 0!==(i=o.set(e,n,t))?i:(e.setAttribute(t,n+""),n):void ee.removeAttr(e,t)):void 0},removeAttr:function(e,t){var n,o,i=0,r=t&&t.match(he);if(r&&1===e.nodeType)for(;n=r[i++];)o=ee.propFix[n]||n,ee.expr.match.bool.test(n)&&(e[o]=!1),e.removeAttribute(n)},attrHooks:{type:{set:function(e,t){if(!J.radioValue&&"radio"===t&&ee.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}}}),rt={set:function(e,t,n){return t===!1?ee.removeAttr(e,n):e.setAttribute(n,n),n}},ee.each(ee.expr.match.bool.source.match(/\w+/g),function(e,t){var n=st[t]||ee.find.attr;st[t]=function(e,t,o){var i,r;return o||(r=st[t],st[t]=i,i=null!=n(e,t,o)?t.toLowerCase():null,st[t]=r),i}});var at=/^(?:input|select|textarea|button)$/i;ee.fn.extend({prop:function(e,t){return ge(this,ee.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[ee.propFix[e]||e]})}}),ee.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(e,t,n){var o,i,r,s=e.nodeType;return e&&3!==s&&8!==s&&2!==s?(r=1!==s||!ee.isXMLDoc(e),r&&(t=ee.propFix[t]||t,i=ee.propHooks[t]),void 0!==n?i&&"set"in i&&void 0!==(o=i.set(e,n,t))?o:e[t]=n:i&&"get"in i&&null!==(o=i.get(e,t))?o:e[t]):void 0},propHooks:{tabIndex:{get:function(e){return e.hasAttribute("tabindex")||at.test(e.nodeName)||e.href?e.tabIndex:-1}}}}),J.optSelected||(ee.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null}}),ee.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){ee.propFix[this.toLowerCase()]=this});var ut=/[\t\r\n\f]/g;ee.fn.extend({addClass:function(e){var t,n,o,i,r,s,a="string"==typeof e&&e,u=0,l=this.length;if(ee.isFunction(e))return this.each(function(t){ee(this).addClass(e.call(this,t,this.className))});if(a)for(t=(e||"").match(he)||[];l>u;u++)if(n=this[u],o=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(ut," "):" ")){for(r=0;i=t[r++];)o.indexOf(" "+i+" ")<0&&(o+=i+" ");s=ee.trim(o),n.className!==s&&(n.className=s)}return this},removeClass:function(e){var t,n,o,i,r,s,a=0===arguments.length||"string"==typeof e&&e,u=0,l=this.length;if(ee.isFunction(e))return this.each(function(t){ee(this).removeClass(e.call(this,t,this.className))});if(a)for(t=(e||"").match(he)||[];l>u;u++)if(n=this[u],o=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(ut," "):"")){for(r=0;i=t[r++];)for(;o.indexOf(" "+i+" ")>=0;)o=o.replace(" "+i+" "," ");s=e?ee.trim(o):"",n.className!==s&&(n.className=s)}return this},toggleClass:function(e,t){var n="undefined"==typeof e?"undefined":u(e);return"boolean"==typeof t&&"string"===n?t?this.addClass(e):this.removeClass(e):this.each(ee.isFunction(e)?function(n){ee(this).toggleClass(e.call(this,n,this.className,t),t)}:function(){if("string"===n)for(var t,o=0,i=ee(this),r=e.match(he)||[];t=r[o++];)i.hasClass(t)?i.removeClass(t):i.addClass(t);else(n===ke||"boolean"===n)&&(this.className&&ve.set(this,"__className__",this.className),this.className=this.className||e===!1?"":ve.get(this,"__className__")||"")})},hasClass:function(e){for(var t=" "+e+" ",n=0,o=this.length;o>n;n++)if(1===this[n].nodeType&&(" "+this[n].className+" ").replace(ut," ").indexOf(t)>=0)return!0;return!1}});var lt=/\r/g;ee.fn.extend({val:function(e){var t,n,o,i=this[0];return arguments.length?(o=ee.isFunction(e),this.each(function(n){var i;1===this.nodeType&&(i=o?e.call(this,n,ee(this).val()):e,null==i?i="":"number"==typeof i?i+="":ee.isArray(i)&&(i=ee.map(i,function(e){return null==e?"":e+""})),t=ee.valHooks[this.type]||ee.valHooks[this.nodeName.toLowerCase()],t&&"set"in t&&void 0!==t.set(this,i,"value")||(this.value=i))})):i?(t=ee.valHooks[i.type]||ee.valHooks[i.nodeName.toLowerCase()],t&&"get"in t&&void 0!==(n=t.get(i,"value"))?n:(n=i.value,"string"==typeof n?n.replace(lt,""):null==n?"":n)):void 0}}),ee.extend({valHooks:{option:{get:function(e){var t=ee.find.attr(e,"value");return null!=t?t:ee.trim(ee.text(e))}},select:{get:function(e){for(var t,n,o=e.options,i=e.selectedIndex,r="select-one"===e.type||0>i,s=r?null:[],a=r?i+1:o.length,u=0>i?a:r?i:0;a>u;u++)if(n=o[u],!(!n.selected&&u!==i||(J.optDisabled?n.disabled:null!==n.getAttribute("disabled"))||n.parentNode.disabled&&ee.nodeName(n.parentNode,"optgroup"))){if(t=ee(n).val(),r)return t;s.push(t)}return s},set:function(e,t){for(var n,o,i=e.options,r=ee.makeArray(t),s=i.length;s--;)o=i[s],(o.selected=ee.inArray(o.value,r)>=0)&&(n=!0);return n||(e.selectedIndex=-1),r}}}}),ee.each(["radio","checkbox"],function(){ee.valHooks[this]={set:function(e,t){return ee.isArray(t)?e.checked=ee.inArray(ee(e).val(),t)>=0:void 0}},J.checkOn||(ee.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),ee.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){ee.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),ee.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,o){return this.on(t,e,n,o)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}});var ct=ee.now(),ft=/\?/;ee.parseJSON=function(e){return JSON.parse(e+"")},ee.parseXML=function(e){var t,n;if(!e||"string"!=typeof e)return null;try{n=new DOMParser,t=n.parseFromString(e,"text/xml")}catch(o){t=void 0}return(!t||t.getElementsByTagName("parsererror").length)&&ee.error("Invalid XML: "+e),t};var dt,pt,ht=/#.*$/,yt=/([?&])_=[^&]*/,mt=/^(.*?):[ \t]*([^\r\n]*)$/gm,gt=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,vt=/^(?:GET|HEAD)$/,bt=/^\/\//,xt=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,St={},wt={},Tt="*/".concat("*");try{pt=location.href}catch(Ct){pt=K.createElement("a"),pt.href="",pt=pt.href}dt=xt.exec(pt.toLowerCase())||[],ee.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:pt,type:"GET",isLocal:gt.test(dt[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Tt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":ee.parseJSON,"text xml":ee.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?P(P(e,ee.ajaxSettings),t):P(ee.ajaxSettings,e)},ajaxPrefilter:M(St),ajaxTransport:M(wt),ajax:function(e,t){function n(e,t,n,s){var u,l,f,v,b,S=t;2!==x&&(x=2,a&&clearTimeout(a),o=void 0,r=s||"",w.readyState=e>0?4:0,u=e>=200&&300>e||304===e,n&&(v=R(d,w,n)),v=B(d,v,w,u),u?(d.ifModified&&(b=w.getResponseHeader("Last-Modified"),b&&(ee.lastModified[i]=b),b=w.getResponseHeader("etag"),b&&(ee.etag[i]=b)),204===e||"HEAD"===d.type?S="nocontent":304===e?S="notmodified":(S=v.state,l=v.data,f=v.error,u=!f)):(f=S,(e||!S)&&(S="error",0>e&&(e=0))),w.status=e,w.statusText=(t||S)+"",u?y.resolveWith(p,[l,S,w]):y.rejectWith(p,[w,S,f]),w.statusCode(g),g=void 0,c&&h.trigger(u?"ajaxSuccess":"ajaxError",[w,d,u?l:f]),m.fireWith(p,[w,S]),c&&(h.trigger("ajaxComplete",[w,d]),--ee.active||ee.event.trigger("ajaxStop")))}"object"==("undefined"==typeof e?"undefined":u(e))&&(t=e,e=void 0),t=t||{};var o,i,r,s,a,l,c,f,d=ee.ajaxSetup({},t),p=d.context||d,h=d.context&&(p.nodeType||p.jquery)?ee(p):ee.event,y=ee.Deferred(),m=ee.Callbacks("once memory"),g=d.statusCode||{},v={},b={},x=0,S="canceled",w={readyState:0,getResponseHeader:function(e){var t;if(2===x){if(!s)for(s={};t=mt.exec(r);)s[t[1].toLowerCase()]=t[2];t=s[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===x?r:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return x||(e=b[n]=b[n]||e,v[e]=t),this},overrideMimeType:function(e){return x||(d.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>x)for(t in e)g[t]=[g[t],e[t]];else w.always(e[w.status]);return this},abort:function(e){var t=e||S;return o&&o.abort(t),n(0,t),this}};if(y.promise(w).complete=m.add,w.success=w.done,w.error=w.fail,d.url=((e||d.url||pt)+"").replace(ht,"").replace(bt,dt[1]+"//"),d.type=t.method||t.type||d.method||d.type,d.dataTypes=ee.trim(d.dataType||"*").toLowerCase().match(he)||[""],null==d.crossDomain&&(l=xt.exec(d.url.toLowerCase()),d.crossDomain=!(!l||l[1]===dt[1]&&l[2]===dt[2]&&(l[3]||("http:"===l[1]?"80":"443"))===(dt[3]||("http:"===dt[1]?"80":"443")))),d.data&&d.processData&&"string"!=typeof d.data&&(d.data=ee.param(d.data,d.traditional)),F(St,d,t,w),2===x)return w;c=d.global,c&&0===ee.active++&&ee.event.trigger("ajaxStart"),d.type=d.type.toUpperCase(),d.hasContent=!vt.test(d.type),i=d.url,d.hasContent||(d.data&&(i=d.url+=(ft.test(i)?"&":"?")+d.data,delete d.data),d.cache===!1&&(d.url=yt.test(i)?i.replace(yt,"$1_="+ct++):i+(ft.test(i)?"&":"?")+"_="+ct++)),d.ifModified&&(ee.lastModified[i]&&w.setRequestHeader("If-Modified-Since",ee.lastModified[i]),ee.etag[i]&&w.setRequestHeader("If-None-Match",ee.etag[i])),(d.data&&d.hasContent&&d.contentType!==!1||t.contentType)&&w.setRequestHeader("Content-Type",d.contentType),w.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+("*"!==d.dataTypes[0]?", "+Tt+"; q=0.01":""):d.accepts["*"]);for(f in d.headers)w.setRequestHeader(f,d.headers[f]);if(d.beforeSend&&(d.beforeSend.call(p,w,d)===!1||2===x))return w.abort();S="abort";for(f in{success:1,error:1,complete:1})w[f](d[f]);if(o=F(wt,d,t,w)){w.readyState=1,c&&h.trigger("ajaxSend",[w,d]),d.async&&d.timeout>0&&(a=setTimeout(function(){w.abort("timeout")},d.timeout));try{x=1,o.send(v,n)}catch(T){if(!(2>x))throw T;n(-1,T)}}else n(-1,"No Transport");return w},getJSON:function(e,t,n){return ee.get(e,t,n,"json")},getScript:function(e,t){return ee.get(e,void 0,t,"script")}}),ee.each(["get","post"],function(e,t){ee[t]=function(e,n,o,i){return ee.isFunction(n)&&(i=i||o,o=n,n=void 0),ee.ajax({url:e,type:t,dataType:i,data:n,success:o})}}),ee.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){ee.fn[t]=function(e){return this.on(t,e)}}),ee._evalUrl=function(e){return ee.ajax({url:e,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},ee.fn.extend({wrapAll:function(e){var t;return ee.isFunction(e)?this.each(function(t){ee(this).wrapAll(e.call(this,t))}):(this[0]&&(t=ee(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this)},wrapInner:function(e){return this.each(ee.isFunction(e)?function(t){ee(this).wrapInner(e.call(this,t))}:function(){var t=ee(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=ee.isFunction(e);return this.each(function(n){ee(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){ee.nodeName(this,"body")||ee(this).replaceWith(this.childNodes)}).end()}}),ee.expr.filters.hidden=function(e){return e.offsetWidth<=0&&e.offsetHeight<=0},ee.expr.filters.visible=function(e){return!ee.expr.filters.hidden(e)};var Et=/%20/g,kt=/\[\]$/,Dt=/\r?\n/g,Nt=/^(?:submit|button|image|reset|file)$/i,At=/^(?:input|select|textarea|keygen)/i;ee.param=function(e,t){var n,o=[],i=function(e,t){t=ee.isFunction(t)?t():null==t?"":t,o[o.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(void 0===t&&(t=ee.ajaxSettings&&ee.ajaxSettings.traditional),ee.isArray(e)||e.jquery&&!ee.isPlainObject(e))ee.each(e,function(){i(this.name,this.value)});else for(n in e)W(n,e[n],t,i);return o.join("&").replace(Et,"+")},ee.fn.extend({serialize:function(){return ee.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=ee.prop(this,"elements");return e?ee.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!ee(this).is(":disabled")&&At.test(this.nodeName)&&!Nt.test(e)&&(this.checked||!Ee.test(e))}).map(function(e,t){var n=ee(this).val();return null==n?null:ee.isArray(n)?ee.map(n,function(e){return{name:t.name,value:e.replace(Dt,"\r\n")}}):{name:t.name,value:n.replace(Dt,"\r\n")}}).get()}}),ee.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(e){}};var jt=0,Lt={},Ot={0:200,1223:204},_t=ee.ajaxSettings.xhr();e.ActiveXObject&&ee(e).on("unload",function(){for(var e in Lt)Lt[e]()}),J.cors=!!_t&&"withCredentials"in _t,J.ajax=_t=!!_t,ee.ajaxTransport(function(e){var t;return J.cors||_t&&!e.crossDomain?{send:function(n,o){var i,r=e.xhr(),s=++jt;if(r.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(i in e.xhrFields)r[i]=e.xhrFields[i];e.mimeType&&r.overrideMimeType&&r.overrideMimeType(e.mimeType),e.crossDomain||n["X-Requested-With"]||(n["X-Requested-With"]="XMLHttpRequest");for(i in n)r.setRequestHeader(i,n[i]);t=function(e){return function(){t&&(delete Lt[s],t=r.onload=r.onerror=null,"abort"===e?r.abort():"error"===e?o(r.status,r.statusText):o(Ot[r.status]||r.status,r.statusText,"string"==typeof r.responseText?{text:r.responseText}:void 0,r.getAllResponseHeaders()))}},r.onload=t(),r.onerror=t("error"),t=Lt[s]=t("abort");try{r.send(e.hasContent&&e.data||null)}catch(a){if(t)throw a}},abort:function(){t&&t()}}:void 0}),ee.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(e){return ee.globalEval(e),e}}}),ee.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),ee.ajaxTransport("script",function(e){if(e.crossDomain){var t,n;return{send:function(o,i){t=ee("<script>").prop({async:!0,charset:e.scriptCharset,src:e.url}).on("load error",n=function(e){t.remove(),n=null,e&&i("error"===e.type?404:200,e.type)}),K.head.appendChild(t[0])},abort:function(){n&&n()}}}});var qt=[],Ht=/(=)\?(?=&|$)|\?\?/;ee.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=qt.pop()||ee.expando+"_"+ct++;return this[e]=!0,e}}),ee.ajaxPrefilter("json jsonp",function(t,n,o){var i,r,s,a=t.jsonp!==!1&&(Ht.test(t.url)?"url":"string"==typeof t.data&&!(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Ht.test(t.data)&&"data");return a||"jsonp"===t.dataTypes[0]?(i=t.jsonpCallback=ee.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,a?t[a]=t[a].replace(Ht,"$1"+i):t.jsonp!==!1&&(t.url+=(ft.test(t.url)?"&":"?")+t.jsonp+"="+i),
t.converters["script json"]=function(){return s||ee.error(i+" was not called"),s[0]},t.dataTypes[0]="json",r=e[i],e[i]=function(){s=arguments},o.always(function(){e[i]=r,t[i]&&(t.jsonpCallback=n.jsonpCallback,qt.push(i)),s&&ee.isFunction(r)&&r(s[0]),s=r=void 0}),"script"):void 0}),ee.parseHTML=function(e,t,n){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(n=t,t=!1),t=t||K;var o=ae.exec(e),i=!n&&[];return o?[t.createElement(o[1])]:(o=ee.buildFragment([e],t,i),i&&i.length&&ee(i).remove(),ee.merge([],o.childNodes))};var Mt=ee.fn.load;ee.fn.load=function(e,t,n){if("string"!=typeof e&&Mt)return Mt.apply(this,arguments);var o,i,r,s=this,a=e.indexOf(" ");return a>=0&&(o=ee.trim(e.slice(a)),e=e.slice(0,a)),ee.isFunction(t)?(n=t,t=void 0):t&&"object"==("undefined"==typeof t?"undefined":u(t))&&(i="POST"),s.length>0&&ee.ajax({url:e,type:i,dataType:"html",data:t}).done(function(e){r=arguments,s.html(o?ee("<div>").append(ee.parseHTML(e)).find(o):e)}).complete(n&&function(e,t){s.each(n,r||[e.responseText,t,e])}),this},ee.expr.filters.animated=function(e){return ee.grep(ee.timers,function(t){return e===t.elem}).length};var Ft=e.document.documentElement;ee.offset={setOffset:function(e,t,n){var o,i,r,s,a,u,l,c=ee.css(e,"position"),f=ee(e),d={};"static"===c&&(e.style.position="relative"),a=f.offset(),r=ee.css(e,"top"),u=ee.css(e,"left"),l=("absolute"===c||"fixed"===c)&&(r+u).indexOf("auto")>-1,l?(o=f.position(),s=o.top,i=o.left):(s=parseFloat(r)||0,i=parseFloat(u)||0),ee.isFunction(t)&&(t=t.call(e,n,a)),null!=t.top&&(d.top=t.top-a.top+s),null!=t.left&&(d.left=t.left-a.left+i),"using"in t?t.using.call(e,d):f.css(d)}},ee.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){ee.offset.setOffset(this,e,t)});var t,n,o=this[0],i={top:0,left:0},r=o&&o.ownerDocument;return r?(t=r.documentElement,ee.contains(t,o)?(u(o.getBoundingClientRect)!==ke&&(i=o.getBoundingClientRect()),n=I(r),{top:i.top+n.pageYOffset-t.clientTop,left:i.left+n.pageXOffset-t.clientLeft}):i):void 0},position:function(){if(this[0]){var e,t,n=this[0],o={top:0,left:0};return"fixed"===ee.css(n,"position")?t=n.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),ee.nodeName(e[0],"html")||(o=e.offset()),o.top+=ee.css(e[0],"borderTopWidth",!0),o.left+=ee.css(e[0],"borderLeftWidth",!0)),{top:t.top-o.top-ee.css(n,"marginTop",!0),left:t.left-o.left-ee.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent||Ft;e&&!ee.nodeName(e,"html")&&"static"===ee.css(e,"position");)e=e.offsetParent;return e||Ft})}}),ee.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,n){var o="pageYOffset"===n;ee.fn[t]=function(i){return ge(this,function(t,i,r){var s=I(t);return void 0===r?s?s[n]:t[i]:void(s?s.scrollTo(o?e.pageXOffset:r,o?r:e.pageYOffset):t[i]=r)},t,i,arguments.length,null)}}),ee.each(["top","left"],function(e,t){ee.cssHooks[t]=T(J.pixelPosition,function(e,n){return n?(n=w(e,t),Xe.test(n)?ee(e).position()[t]+"px":n):void 0})}),ee.each({Height:"height",Width:"width"},function(e,t){ee.each({padding:"inner"+e,content:t,"":"outer"+e},function(n,o){ee.fn[o]=function(o,i){var r=arguments.length&&(n||"boolean"!=typeof o),s=n||(o===!0||i===!0?"margin":"border");return ge(this,function(t,n,o){var i;return ee.isWindow(t)?t.document.documentElement["client"+e]:9===t.nodeType?(i=t.documentElement,Math.max(t.body["scroll"+e],i["scroll"+e],t.body["offset"+e],i["offset"+e],i["client"+e])):void 0===o?ee.css(t,n,s):ee.style(t,n,o,s)},t,r?o:void 0,r,null)}})}),ee.fn.size=function(){return this.length},ee.fn.andSelf=ee.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return ee});var Pt=e.jQuery,Rt=e.$;return ee.noConflict=function(t){return e.$===ee&&(e.$=Rt),t&&e.jQuery===ee&&(e.jQuery=Pt),ee},("undefined"==typeof t?"undefined":u(t))===ke&&(e.jQuery=e.$=ee),ee})},{}],5:[function(e,t,n){"use strict";var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},i="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":o(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":o(e)},r="function"==typeof Symbol&&"symbol"===i(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":i(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":i(e)},s="function"==typeof Symbol&&"symbol"===r(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":r(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":r(e)},a="function"==typeof Symbol&&"symbol"===s(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":s(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":s(e)},u="function"==typeof Symbol&&"symbol"===a(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":a(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":a(e)},l="function"==typeof Symbol&&"symbol"===u(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":u(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":u(e)},c="function"==typeof Symbol&&"symbol"===l(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":l(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":l(e)},f="function"==typeof Symbol&&"symbol"===c(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":c(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":c(e)},d="function"==typeof Symbol&&"symbol"===f(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":f(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":f(e)},p="function"==typeof Symbol&&"symbol"===d(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":d(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":d(e)},h="function"==typeof Symbol&&"symbol"===p(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":p(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":p(e)},y="function"==typeof Symbol&&"symbol"===h(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":h(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":h(e)},m="function"==typeof Symbol&&"symbol"===y(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":y(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":y(e)},g="function"==typeof Symbol&&"symbol"===m(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":m(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":m(e)},v="function"==typeof Symbol&&"symbol"===g(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":g(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":g(e)},b="function"==typeof Symbol&&"symbol"===v(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":v(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":v(e)},x="function"==typeof Symbol&&"symbol"===b(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":b(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":b(e)},S="function"==typeof Symbol&&"symbol"===x(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":x(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":x(e)},w="function"==typeof Symbol&&"symbol"===S(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":S(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":S(e)},T="function"==typeof Symbol&&"symbol"===w(Symbol.iterator)?function(e){return"undefined"==typeof e?"undefined":w(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":"undefined"==typeof e?"undefined":w(e)};!function(e){"function"==typeof define&&define.amd?define(e):"undefined"!=typeof t&&"undefined"!=typeof t.exports?t.exports=e():"undefined"!=typeof Package?Sortable=e():window.Sortable=e()}(function(){function e(e,t){if(!e||!e.nodeType||1!==e.nodeType)throw"Sortable: `el` must be HTMLElement, and not "+{}.toString.call(e);this.el=e,this.options=t=v({},t),e[R]=this;var n={group:Math.random(),sort:!0,disabled:!1,store:null,handle:null,scroll:!0,scrollSensitivity:30,scrollSpeed:10,draggable:/[uo]l/i.test(e.nodeName)?"li":">*",ghostClass:"sortable-ghost",chosenClass:"sortable-chosen",ignore:"a, img",filter:null,animation:0,setData:function(e,t){e.setData("Text",t.textContent)},dropBubble:!1,dragoverBubble:!1,dataIdAttr:"data-id",delay:0,forceFallback:!1,fallbackClass:"sortable-fallback",fallbackOnBody:!1};for(var o in n)!(o in t)&&(t[o]=n[o]);G(t);for(var r in this)"_"===r.charAt(0)&&(this[r]=this[r].bind(this));this.nativeDraggable=t.forceFallback?!1:X,i(e,"mousedown",this._onTapStart),i(e,"touchstart",this._onTapStart),this.nativeDraggable&&(i(e,"dragover",this),i(e,"dragenter",this)),U.push(this._onDragOver),t.store&&this.sort(t.store.get(this))}function t(e){w&&w.state!==e&&(a(w,"display",e?"none":""),!e&&w.state&&C.insertBefore(w,b),w.state=e)}function n(e,t,n){if(e){n=n||W;do if(">*"===t&&e.parentNode===n||m(e,t))return e;while(e!==n&&(e=e.parentNode))}return null}function o(e){e.dataTransfer&&(e.dataTransfer.dropEffect="move"),e.preventDefault()}function i(e,t,n){e.addEventListener(t,n,!1)}function r(e,t,n){e.removeEventListener(t,n,!1)}function s(e,t,n){if(e)if(e.classList)e.classList[n?"add":"remove"](t);else{var o=(" "+e.className+" ").replace(P," ").replace(" "+t+" "," ");e.className=(o+(n?" "+t:"")).replace(P," ")}}function a(e,t,n){var o=e&&e.style;if(o){if(void 0===n)return W.defaultView&&W.defaultView.getComputedStyle?n=W.defaultView.getComputedStyle(e,""):e.currentStyle&&(n=e.currentStyle),void 0===t?n:n[t];t in o||(t="-webkit-"+t),o[t]=n+("string"==typeof n?"":"px")}}function u(e,t,n){if(e){var o=e.getElementsByTagName(t),i=0,r=o.length;if(n)for(;r>i;i++)n(o[i],i);return o}return[]}function l(e,t,n,o,i,r,s){var a=W.createEvent("Event"),u=(e||t[R]).options,l="on"+n.charAt(0).toUpperCase()+n.substr(1);a.initEvent(n,!0,!0),a.to=t,a.from=i||t,a.item=o||t,a.clone=w,a.oldIndex=r,a.newIndex=s,t.dispatchEvent(a),u[l]&&u[l].call(e,a)}function c(e,t,n,o,i,r){var s,a,u=e[R],l=u.options.onMove;return s=W.createEvent("Event"),s.initEvent("move",!0,!0),s.to=t,s.from=e,s.dragged=n,s.draggedRect=o,s.related=i||t,s.relatedRect=r||t.getBoundingClientRect(),e.dispatchEvent(s),l&&(a=l.call(u,s)),a}function f(e){e.draggable=!1}function d(){Y=!1}function p(e,t){var n=e.lastElementChild,o=n.getBoundingClientRect();return(t.clientY-(o.top+o.height)>5||t.clientX-(o.right+o.width)>5)&&n}function h(e){for(var t=e.tagName+e.className+e.src+e.href+e.textContent,n=t.length,o=0;n--;)o+=t.charCodeAt(n);return o.toString(36)}function y(e,t){var n=0;if(!e||!e.parentNode)return-1;for(;e&&(e=e.previousElementSibling);)"TEMPLATE"!==e.nodeName.toUpperCase()&&m(e,t)&&n++;return n}function m(e,t){if(e){t=t.split(".");var n=t.shift().toUpperCase(),o=new RegExp("\\s("+t.join("|")+")(?=\\s)","g");return!(""!==n&&e.nodeName.toUpperCase()!=n||t.length&&((" "+e.className+" ").match(o)||[]).length!=t.length)}return!1}function g(e,t){var n,o;return function(){void 0===n&&(n=arguments,o=this,setTimeout(function(){1===n.length?e.call(o,n[0]):e.apply(o,n),n=void 0},t))}}function v(e,t){if(e&&t)for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}if("undefined"==typeof window||"undefined"==typeof window.document)return function(){throw new Error("Sortable.js requires a window with a document")};var b,x,S,w,C,E,k,D,N,A,j,L,O,_,q,H,M,F={},P=/\s+/g,R="Sortable"+(new Date).getTime(),B=window,W=B.document,I=B.parseInt,X=!!("draggable"in W.createElement("div")),$=function(e){return e=W.createElement("x"),e.style.cssText="pointer-events:auto","auto"===e.style.pointerEvents}(),Y=!1,z=Math.abs,U=([].slice,[]),V=g(function(e,t,n){if(n&&t.scroll){var o,i,r,s,a=t.scrollSensitivity,u=t.scrollSpeed,l=e.clientX,c=e.clientY,f=window.innerWidth,d=window.innerHeight;if(D!==n&&(k=t.scroll,D=n,k===!0)){k=n;do if(k.offsetWidth<k.scrollWidth||k.offsetHeight<k.scrollHeight)break;while(k=k.parentNode)}k&&(o=k,i=k.getBoundingClientRect(),r=(z(i.right-l)<=a)-(z(i.left-l)<=a),s=(z(i.bottom-c)<=a)-(z(i.top-c)<=a)),r||s||(r=(a>=f-l)-(a>=l),s=(a>=d-c)-(a>=c),(r||s)&&(o=B)),F.vx===r&&F.vy===s&&F.el===o||(F.el=o,F.vx=r,F.vy=s,clearInterval(F.pid),o&&(F.pid=setInterval(function(){o===B?B.scrollTo(B.pageXOffset+r*u,B.pageYOffset+s*u):(s&&(o.scrollTop+=s*u),r&&(o.scrollLeft+=r*u))},24)))}},30),G=function(e){var t=e.group;t&&"object"==("undefined"==typeof t?"undefined":T(t))||(t=e.group={name:t}),["pull","put"].forEach(function(e){e in t||(t[e]=!0)}),e.groups=" "+t.name+(t.put.join?" "+t.put.join(" "):"")+" "};return e.prototype={constructor:e,_onTapStart:function(e){var t=this,o=this.el,i=this.options,r=e.type,s=e.touches&&e.touches[0],a=(s||e).target,u=a,c=i.filter;if(!("mousedown"===r&&0!==e.button||i.disabled)&&(a=n(a,i.draggable,o))){if(L=y(a,i.draggable),"function"==typeof c){if(c.call(this,e,a,this))return l(t,u,"filter",a,o,L),void e.preventDefault()}else if(c&&(c=c.split(",").some(function(e){return e=n(u,e.trim(),o),e?(l(t,e,"filter",a,o,L),!0):void 0})))return void e.preventDefault();i.handle&&!n(u,i.handle,o)||this._prepareDragStart(e,s,a)}},_prepareDragStart:function(e,t,n){var o,r=this,a=r.el,l=r.options,c=a.ownerDocument;n&&!b&&n.parentNode===a&&(q=e,C=a,b=n,x=b.parentNode,E=b.nextSibling,_=l.group,o=function(){r._disableDelayedDrag(),b.draggable=!0,s(b,r.options.chosenClass,!0),r._triggerDragStart(t)},l.ignore.split(",").forEach(function(e){u(b,e.trim(),f)}),i(c,"mouseup",r._onDrop),i(c,"touchend",r._onDrop),i(c,"touchcancel",r._onDrop),l.delay?(i(c,"mouseup",r._disableDelayedDrag),i(c,"touchend",r._disableDelayedDrag),i(c,"touchcancel",r._disableDelayedDrag),i(c,"mousemove",r._disableDelayedDrag),i(c,"touchmove",r._disableDelayedDrag),r._dragStartTimer=setTimeout(o,l.delay)):o())},_disableDelayedDrag:function(){var e=this.el.ownerDocument;clearTimeout(this._dragStartTimer),r(e,"mouseup",this._disableDelayedDrag),r(e,"touchend",this._disableDelayedDrag),r(e,"touchcancel",this._disableDelayedDrag),r(e,"mousemove",this._disableDelayedDrag),r(e,"touchmove",this._disableDelayedDrag)},_triggerDragStart:function(e){e?(q={target:b,clientX:e.clientX,clientY:e.clientY},this._onDragStart(q,"touch")):this.nativeDraggable?(i(b,"dragend",this),i(C,"dragstart",this._onDragStart)):this._onDragStart(q,!0);try{W.selection?W.selection.empty():window.getSelection().removeAllRanges()}catch(t){}},_dragStarted:function(){C&&b&&(s(b,this.options.ghostClass,!0),e.active=this,l(this,C,"start",b,C,L))},_emulateDragOver:function(){if(H){if(this._lastX===H.clientX&&this._lastY===H.clientY)return;this._lastX=H.clientX,this._lastY=H.clientY,$||a(S,"display","none");var e=W.elementFromPoint(H.clientX,H.clientY),t=e,n=" "+this.options.group.name,o=U.length;if(t)do{if(t[R]&&t[R].options.groups.indexOf(n)>-1){for(;o--;)U[o]({clientX:H.clientX,clientY:H.clientY,target:e,rootEl:t});break}e=t}while(t=t.parentNode);$||a(S,"display","")}},_onTouchMove:function(t){if(q){e.active||this._dragStarted(),this._appendGhost();var n=t.touches?t.touches[0]:t,o=n.clientX-q.clientX,i=n.clientY-q.clientY,r=t.touches?"translate3d("+o+"px,"+i+"px,0)":"translate("+o+"px,"+i+"px)";M=!0,H=n,a(S,"webkitTransform",r),a(S,"mozTransform",r),a(S,"msTransform",r),a(S,"transform",r),t.preventDefault()}},_appendGhost:function(){if(!S){var e,t=b.getBoundingClientRect(),n=a(b),o=this.options;S=b.cloneNode(!0),s(S,o.ghostClass,!1),s(S,o.fallbackClass,!0),a(S,"top",t.top-I(n.marginTop,10)),a(S,"left",t.left-I(n.marginLeft,10)),a(S,"width",t.width),a(S,"height",t.height),a(S,"opacity","0.8"),a(S,"position","fixed"),a(S,"zIndex","100000"),a(S,"pointerEvents","none"),o.fallbackOnBody&&W.body.appendChild(S)||C.appendChild(S),e=S.getBoundingClientRect(),a(S,"width",2*t.width-e.width),a(S,"height",2*t.height-e.height)}},_onDragStart:function(e,t){var n=e.dataTransfer,o=this.options;this._offUpEvents(),"clone"==_.pull&&(w=b.cloneNode(!0),a(w,"display","none"),C.insertBefore(w,b)),t?("touch"===t?(i(W,"touchmove",this._onTouchMove),i(W,"touchend",this._onDrop),i(W,"touchcancel",this._onDrop)):(i(W,"mousemove",this._onTouchMove),i(W,"mouseup",this._onDrop)),this._loopId=setInterval(this._emulateDragOver,50)):(n&&(n.effectAllowed="move",o.setData&&o.setData.call(this,n,b)),i(W,"drop",this),setTimeout(this._dragStarted,0))},_onDragOver:function(e){var o,i,r,s=this.el,u=this.options,l=u.group,f=l.put,h=_===l,y=u.sort;if(void 0!==e.preventDefault&&(e.preventDefault(),!u.dragoverBubble&&e.stopPropagation()),M=!0,_&&!u.disabled&&(h?y||(r=!C.contains(b)):_.pull&&f&&(_.name===l.name||f.indexOf&&~f.indexOf(_.name)))&&(void 0===e.rootEl||e.rootEl===this.el)){if(V(e,u,this.el),Y)return;if(o=n(e.target,u.draggable,s),i=b.getBoundingClientRect(),r)return t(!0),void(w||E?C.insertBefore(b,w||E):y||C.appendChild(b));if(0===s.children.length||s.children[0]===S||s===e.target&&(o=p(s,e))){if(o){if(o.animated)return;g=o.getBoundingClientRect()}t(h),c(C,s,b,i,o,g)!==!1&&(b.contains(s)||(s.appendChild(b),x=s),this._animate(i,b),o&&this._animate(g,o))}else if(o&&!o.animated&&o!==b&&void 0!==o.parentNode[R]){N!==o&&(N=o,A=a(o),j=a(o.parentNode));var m,g=o.getBoundingClientRect(),v=g.right-g.left,T=g.bottom-g.top,k=/left|right|inline/.test(A.cssFloat+A.display)||"flex"==j.display&&0===j["flex-direction"].indexOf("row"),D=o.offsetWidth>b.offsetWidth,L=o.offsetHeight>b.offsetHeight,O=(k?(e.clientX-g.left)/v:(e.clientY-g.top)/T)>.5,q=o.nextElementSibling,H=c(C,s,b,i,o,g);if(H!==!1){if(Y=!0,setTimeout(d,30),t(h),1===H||-1===H)m=1===H;else if(k){var F=b.offsetTop,P=o.offsetTop;m=F===P?o.previousElementSibling===b&&!D||O&&D:P>F}else m=q!==b&&!L||O&&L;b.contains(s)||(m&&!q?s.appendChild(b):o.parentNode.insertBefore(b,m?q:o)),x=b.parentNode,this._animate(i,b),this._animate(g,o)}}}},_animate:function(e,t){var n=this.options.animation;if(n){var o=t.getBoundingClientRect();a(t,"transition","none"),a(t,"transform","translate3d("+(e.left-o.left)+"px,"+(e.top-o.top)+"px,0)"),t.offsetWidth,a(t,"transition","all "+n+"ms"),a(t,"transform","translate3d(0,0,0)"),clearTimeout(t.animated),t.animated=setTimeout(function(){a(t,"transition",""),a(t,"transform",""),t.animated=!1},n)}},_offUpEvents:function(){var e=this.el.ownerDocument;r(W,"touchmove",this._onTouchMove),r(e,"mouseup",this._onDrop),r(e,"touchend",this._onDrop),r(e,"touchcancel",this._onDrop)},_onDrop:function(t){var n=this.el,o=this.options;clearInterval(this._loopId),clearInterval(F.pid),clearTimeout(this._dragStartTimer),r(W,"mousemove",this._onTouchMove),this.nativeDraggable&&(r(W,"drop",this),r(n,"dragstart",this._onDragStart)),this._offUpEvents(),t&&(M&&(t.preventDefault(),!o.dropBubble&&t.stopPropagation()),S&&S.parentNode.removeChild(S),b&&(this.nativeDraggable&&r(b,"dragend",this),f(b),s(b,this.options.ghostClass,!1),s(b,this.options.chosenClass,!1),C!==x?(O=y(b,o.draggable),O>=0&&(l(null,x,"sort",b,C,L,O),l(this,C,"sort",b,C,L,O),l(null,x,"add",b,C,L,O),l(this,C,"remove",b,C,L,O))):(w&&w.parentNode.removeChild(w),b.nextSibling!==E&&(O=y(b,o.draggable),O>=0&&(l(this,C,"update",b,C,L,O),l(this,C,"sort",b,C,L,O)))),e.active&&(null!==O&&-1!==O||(O=L),l(this,C,"end",b,C,L,O),this.save()))),this._nulling()},_nulling:function(){C=b=x=S=E=w=k=D=q=H=M=O=N=A=_=e.active=null},handleEvent:function(e){var t=e.type;"dragover"===t||"dragenter"===t?b&&(this._onDragOver(e),o(e)):"drop"!==t&&"dragend"!==t||this._onDrop(e)},toArray:function(){for(var e,t=[],o=this.el.children,i=0,r=o.length,s=this.options;r>i;i++)e=o[i],n(e,s.draggable,this.el)&&t.push(e.getAttribute(s.dataIdAttr)||h(e));return t},sort:function(e){var t={},o=this.el;this.toArray().forEach(function(e,i){var r=o.children[i];n(r,this.options.draggable,o)&&(t[e]=r)},this),e.forEach(function(e){t[e]&&(o.removeChild(t[e]),o.appendChild(t[e]))})},save:function(){var e=this.options.store;e&&e.set(this)},closest:function(e,t){return n(e,t||this.options.draggable,this.el)},option:function(e,t){var n=this.options;return void 0===t?n[e]:(n[e]=t,void("group"===e&&G(n)))},destroy:function(){var e=this.el;e[R]=null,r(e,"mousedown",this._onTapStart),r(e,"touchstart",this._onTapStart),this.nativeDraggable&&(r(e,"dragover",this),r(e,"dragenter",this)),Array.prototype.forEach.call(e.querySelectorAll("[draggable]"),function(e){e.removeAttribute("draggable")}),U.splice(U.indexOf(this._onDragOver),1),this._onDrop(),this.el=e=null}},e.utils={on:i,off:r,css:a,find:u,is:function(e,t){return!!n(e,t,e)},extend:v,throttle:g,closest:n,toggleClass:s,index:y},e.create=function(t,n){return new e(t,n)},e.version="1.4.2",e})},{}]},{},[2]);
//# sourceMappingURL=data:application/json;base64,
